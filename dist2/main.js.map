{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about-routing.module.ts","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/builder/builder-routing.module.ts","webpack:///./src/app/builder/builder.component.css","webpack:///./src/app/builder/builder.component.html","webpack:///./src/app/builder/builder.component.ts","webpack:///./src/app/chessboard/chess-enums.ts","webpack:///./src/app/chessboard/chess-square.ts","webpack:///./src/app/chessboard/chess.ts","webpack:///./src/app/chessboard/chessboard.component.css","webpack:///./src/app/chessboard/chessboard.component.html","webpack:///./src/app/chessboard/chessboard.component.ts","webpack:///./src/app/chessboard/svg-data.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/sequences/sequences-routing.module.ts","webpack:///./src/app/sequences/sequences.component.css","webpack:///./src/app/sequences/sequences.component.html","webpack:///./src/app/sequences/sequences.component.ts","webpack:///./src/app/services/alasql.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/google-auth.service.ts","webpack:///./src/app/services/js-loader.service.ts","webpack:///./src/app/services/record.service.ts","webpack:///./src/app/services/spreadsheet.service.ts","webpack:///./src/app/services/spreadsheet.ts","webpack:///./src/app/shared-classes/record.ts","webpack:///./src/app/shared-classes/sequence.ts","webpack:///./src/app/trainer/trainer-routing.module.ts","webpack:///./src/app/trainer/trainer.component.css","webpack:///./src/app/trainer/trainer.component.html","webpack:///./src/app/trainer/trainer.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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E,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC5D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;YACjD,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;SACjD,CAAC;QAEF,SAAI,GAAG;YACH,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACjD,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YACrD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACpD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,E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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {AboutComponent } from './about.component';\n\nconst routes: Routes = [\n  { path: 'about', component: AboutComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class AboutRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<br>\\n<h2>Chess Opening Trainer</h2>\\n<p>This is a web app to help with learning chess openings.</p>\\n<h3>Why</h3>\\n<p>If you don't know any openings, or always play the same opening, chess becomes very boring and limiting. But\\n    learning openings is a major pain in the aris. Experts always say that you shouldn't try to rote-learn openings but\\n    should understand the principles behind an opening that you are trying to learn. Fair enough, except I forget the\\n    principles very quickly. I can watch a video where a teacher explains an opening, and understand it, but when the\\n    situation comes up in practice I find that I've completely forgotten what to do - I forget the moves and the\\n    principles. But I've tried rote-learning openings too but found it very difficult. And then GingerGM goes and says\\n    that you need to know the first 10 moves of each opening. 'I'm screwed', I thought.</p>\\n<p>\\n    This is an attempt to learn openings by playing out the first few moves of an opening in a rote-learning fashion.\\n    The app plays against you and plays the same moves for each sequence that you are hoping to learn. By having a\\n    sequence of moves I'm hoping that it will be possible to be reminded of the principles behind the opening as well\\n    as the actual moves to make. And maybe remembering a sequence will be easier than remembering individual moves.\\n    Also, as I tend to play 5 minute blitz, and I'm a very low-ranked player (1150 ish), at this level we tend to just\\n    throw our pieces out onto the board and so exact move order and precision don't make that much difference; it's\\n    more important to know the general direction that the pieces need to be going.\\n</p>\\n<p>\\n    I have no idea if this will be helpful but I'm going to try.\\n</p>\\n<p>\\n    It is still work-in-progress.\\n</p>\\n<p>It uses the chessboard from <a href=\\\"https://github.com/shlomiassaf/ngx-chess\\\">\\n    ngx-chess</a></p>\\n<p>\\n    My name is David Ma and I'm the oldest, fattest and most foolish man in the world.</p>\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n\n} // End of class AboutComponent\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './not-found.component';\nimport { HeaderComponent } from './header/header.component';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '', pathMatch: 'full' },\n  // { path: '', component: HeaderComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false // <-- debugging purposes only\n\n      }\n    )\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n\n  ]\n})\nexport class AppRoutingModule { }\n\n\n/*\nCopyright 2017-2018 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","module.exports = \".g-signin2 {\\n    float: right;\\n  }\\n\\n  .sign-out {\\n    background-color: #4285f4;\\n    color: white;\\n    float: right;\\n    font-size: 19px;\\n  \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0dBQ2Q7O0VBRUQ7SUFDRSwwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLGFBQWE7SUFDYixnQkFBZ0I7O0dBRWpCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZy1zaWduaW4yIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gIH1cblxuICAuc2lnbi1vdXQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Mjg1ZjQ7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBmb250LXNpemU6IDE5cHg7XG4gIFxuICB9Il19 */\"","module.exports = \"<app-header></app-header>\"","import { Component, OnInit } from '@angular/core';\n\ndeclare global {\n  interface Window { onSignIn: (googleuser: any) => void; }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public isSignedIn = false;\n  public googleDisplay = 'block';\n\n  constructor() {\n  }\n\n\n\n  ngOnInit() { }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { PageNotFoundComponent } from './not-found.component';\nimport { AppComponent } from './app.component';\nimport { GoogleAuthService } from './services/google-auth.service';\nimport { RecordService } from './services/record.service';\nimport { AlaSql } from './services/alasql.service';\nimport { JsLoaderService } from './services/js-loader.service';\nimport { SpreadsheetService } from './services/spreadsheet.service';\nimport { TrainerComponent } from './trainer/trainer.component';\nimport { SequencesComponent } from './sequences/sequences.component';\nimport { AboutComponent } from './about/about.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TrainerRoutingModule } from './trainer/trainer-routing.module';\nimport { SequencesRoutingModule } from './sequences/sequences-routing.module';\nimport { AboutRoutingModule } from './about/about-routing.module';\nimport { ChessboardComponent } from './chessboard/chessboard.component';\nimport { HeaderComponent } from './header/header.component';\nimport { DataService } from './services/data.service';\nimport { BuilderRoutingModule } from './builder/builder-routing.module';\nimport { BuilderComponent } from './builder/builder.component';\nimport {\n  MatTableModule,\n  MatButtonModule,\n  MatTooltipModule,\n  MatIconModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport 'hammerjs';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    TrainerRoutingModule,\n    SequencesRoutingModule,\n    AboutRoutingModule,\n    BuilderRoutingModule,\n    AppRoutingModule,\n    MatTableModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatToolbarModule,\n    BrowserAnimationsModule\n  ],\n  declarations: [\n    AppComponent,\n    TrainerComponent,\n    SequencesComponent,\n    AboutComponent,\n    PageNotFoundComponent,\n    ChessboardComponent,\n    HeaderComponent,\n    BuilderComponent\n  ],\n  bootstrap: [AppComponent],\n  providers: [\n    JsLoaderService,\n    GoogleAuthService,\n    DataService,\n    AlaSql,\n    RecordService,\n    SpreadsheetService]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BuilderComponent } from './builder.component';\n\nconst routes: Routes = [\n  { path: 'builder', component: BuilderComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class BuilderRoutingModule { }\n","module.exports = \".bullets {\\n    list-style-type: none;\\n    display: inline-block; \\n    font-weight: bold;\\n    padding-left: 5px;\\n    color: #b7d7d9;\\n    word-break: break-all;\\n}\\n\\n.nav {\\n    padding-left: 10px;\\n}\\n\\n.icon {\\n    color: #b7d7d9;\\n}\\n\\n.floating-box {\\n    margin: 1px;\\n    display: inline-block; \\n    vertical-align: top;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYnVpbGRlci9idWlsZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLHNCQUFzQjtDQUN6Qjs7QUFFRDtJQUNJLG1CQUFtQjtDQUN0Qjs7QUFFRDtJQUNJLGVBQWU7Q0FDbEI7O0FBRUQ7SUFDSSxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLG9CQUFvQjtDQUN2QiIsImZpbGUiOiJzcmMvYXBwL2J1aWxkZXIvYnVpbGRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1bGxldHMge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgIGNvbG9yOiAjYjdkN2Q5O1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cblxuLm5hdiB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG4uaWNvbiB7XG4gICAgY29sb3I6ICNiN2Q3ZDk7XG59XG5cbi5mbG9hdGluZy1ib3gge1xuICAgIG1hcmdpbjogMXB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbn0iXX0= */\"","module.exports = \"<br>\\n<app-chessboard class=\\\"floating-box\\\"></app-chessboard>\\n<section class=\\\"floating-box\\\" [style.max-width.px]=\\\"displayWidth\\\">\\n\\t<div class=\\\"nav\\\">\\n\\t\\t<button class=\\\"icon\\\" mat-icon-button matTooltip=\\\"Flip\\\" (click)=\\\"flipBoard()\\\">\\n\\t\\t\\t<mat-icon>cached\\n\\t\\t\\t</mat-icon>\\n\\t\\t</button>\\n\\t\\t<button mat-icon-button matTooltip=\\\"Restart from here\\\" (click)=\\\"restart()\\\">\\n\\t\\t\\t<mat-icon>flight_takeoff\\n\\t\\t\\t</mat-icon>\\n\\t\\t</button>\\n\\t\\t<button [disabled]=\\\"moves.length === 0\\\" mat-icon-button matTooltip=\\\"Undo\\\" (click)=\\\"undoMove()\\\">\\n\\t\\t\\t<mat-icon>undo\\n\\t\\t\\t</mat-icon>\\n\\t\\t</button>\\n\\t</div>\\n\\n\\t<ul class=\\\"bullets\\\">\\n\\t\\t<li *ngFor=\\\"let line of output\\\">{{ line }}</li>\\n\\t</ul>\\n</section>\\n<!-- <pre>{{ output }}</pre> -->\\n<br>\\n<form (ngSubmit)=\\\"onFenSubmit()\\\" #fenForm=\\\"ngForm\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t\\t<label>Enter a fen to start sequence.</label>\\n\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fen\\\" required [(ngModel)]=\\\"model.fen\\\" name=\\\"fen\\\" #fen=\\\"ngModel\\\">\\n\\t</div>\\n\\n\\n\\n\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n</form>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ChessboardComponent } from '../chessboard/chessboard.component';\nimport { Move } from '../chessboard/chess-enums';\n\nclass FenRequest {\n    fen: string;\n}\n\n@Component({\n    selector: 'app-builder',\n    templateUrl: './builder.component.html',\n    styleUrls: ['./builder.component.css']\n})\nexport class BuilderComponent implements OnInit {\n\n    public output: Array<string> = new Array<string>();\n    @ViewChild(ChessboardComponent) board: ChessboardComponent;\n\n    public moves = new Array<Move>();\n    public fens = new Array<string>();\n    public model = new FenRequest();\n    public displayWidth: number;\n\n    constructor() { }\n\n    ngOnInit() {\n        this.output.push('Move the pieces to build a sequence.');\n        this.recordSequence();\n        this.displayWidth = this.board.wholeSize;\n    } // end of ngOnInit\n\n    recordSequence() {\n        this.board.load();\n        this.fens.push(this.board.chess.fen);\n        this.board.moveMade.subscribe((move: Move) => {\n            this.moves.push(move);\n            this.fens.push(this.board.chess.fen);\n            this.updateOutput();\n            console.log(this.board.chess.fen);\n        });\n    }\n\n    flipBoard() {\n        this.board.flipBoard();\n    }\n\n    restart() {\n        this.moves.length = 0;\n        this.fens.length = 0;\n        this.fens.push(this.board.chess.fen);\n        this.updateOutput();\n    }\n\n    async onFenSubmit() {\n        console.log('new fen: ' + this.model.fen);\n        this.board.load(this.model.fen);\n        console.log(this.board.chess.fen);\n        this.restart();\n    }\n\n    undoMove() {\n        if (this.moves.length > 0) {\n            this.fens.pop();\n            this.moves.pop();\n            this.board.load(this.fens[this.fens.length - 1]);\n            this.updateOutput();\n        }\n    }\n\n    private updateOutput() {\n        this.output.length = 0;\n        this.output.push('Starting FEN: ' + this.fens[0]);\n        let movesList = 'Moves: ';\n        let isFirst = true;\n        for (let moveMade of this.moves) {\n            if (isFirst)\n                isFirst = false;\n            else\n                movesList += ',';\n            movesList += moveMade.from + moveMade.to;\n        }\n        this.output.push(movesList);\n    }\n\n\n} // End of class BuilderComponent\n\n","import { EventEmitter } from '@angular/core';\nimport { ChessSquare } from './chess-square';\n\nexport enum Colour {\n    WHITE = 'w',\n    BLACK = 'b'\n}\n\nexport enum PieceType {\n    PAWN = 'p',\n    KNIGHT = 'n',\n    BISHOP = 'b',\n    ROOK = 'r',\n    QUEEN = 'q',\n    KING = 'k'\n}\n\nconst files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport { files };\n\nexport class Move {\n    constructor(public from: string, public to: string,\n        public promotion?: string) {}\n}\n\n// export interface IChessBoardParent {\n//     resize: EventEmitter<void>;\n//     squareSize: number;\n//     boardSide: Colour;\n//     wholeSize: number;\n//     moving: boolean;\n//     movingFrom: ChessSquare;\n//     mouseMoveLocal: EventEmitter<MouseEvent>;\n//     mouseUpLocal: EventEmitter<MouseEvent>;\n//     touchMoveLocal: EventEmitter<TouchEvent>;\n//     touchEndLocal: EventEmitter<TouchEvent>\n// }\n\n// export enum Coordinate {\n//     \"a8\" = 0, \"b8\" = 1, \"c8\" = 2, \"d8\" = 3,\n//     \"e8\" = 4, \"f8\" = 5, \"g8\" = 6, \"h8\" = 7,\n//     \"a7\" = 16, \"b7\" = 17, \"c7\" = 18, \"d7\" = 19,\n//     \"e7\" = 20, \"f7\" = 21, \"g7\" = 22, \"h7\" = 23,\n//     \"a6\" = 32, \"b6\" = 33, \"c6\" = 34, \"d6\" = 35,\n//     \"e6\" = 36, \"f6\" = 37, \"g6\" = 38, \"h6\" = 39,\n//     \"a5\" = 48, \"b5\" = 49, \"c5\" = 50, \"d5\" = 51,\n//     \"e5\" = 52, \"f5\" = 53, \"g5\" = 54, \"h5\" = 55,\n//     \"a4\" = 64,\"b4\" = 65, \"c4\" = 66, \"d4\" = 67,\n//     \"e4\" = 68, \"f4\" = 69, \"g4\" = 70, \"h4\" = 71,\n//     \"a3\" = 80, \"b3\" = 81, \"c3\" = 82, \"d3\" = 83,\n//     \"e3\" = 84, \"f3\" = 85, \"g3\" = 86, \"h3\" = 87,\n//     \"a2\" = 96, \"b2\" = 97, \"c2\" = 98, \"d2\" = 99,\n//     \"e2\" = 100, \"f2\" = 101, \"g2\" = 102, \"h2\" = 103,\n//     \"a1\" = 112, \"b1\" = 113, \"c1\" = 114, \"d1\" = 115,\n//     \"e1\" = 116, \"f1\" = 117, \"g1\" = 118, \"h1\" = 119\n// }\n","/*\nA ChessSquare object represents a single square on the chessboard.\nIt keeps track of what piece is on it.\n*/\n\nimport { SvgData, SvgPath, SvgCircle, SvgPieces } from './svg-data';\nimport { Colour, PieceType, files } from './chess-enums';\nimport { ChessboardComponent } from './chessboard.component';\n// import { EventEmitter } from '@angular/core';\n\nexport class ChessSquare {\n    \n    public squareColour: Colour;\n    public pieceColour: Colour = Colour.WHITE;\n    public row: number;\n    public column: number;\n    public scale: number; // amount to scale pieces by\n    public transform: string; // transform applied to whole piece\n    public svgData = new SvgData();\n    private _pieceType: PieceType;\n\n    // coordinate must be in form a1\n    constructor(public coordinate: string, public parent: ChessboardComponent) {\n        // Listen for a change in screen size\n        this.parent.resize.subscribe(() => {\n            this.adjustPosition();\n        });\n\n        this.calculateRowColumn();\n        this.adjustPosition();\n    }\n\n    // Where the piece starts in the svg region\n    get pieceXOffset(): number {\n        return this.squareXOffset / this.scale;\n    }\n    get pieceYOffset(): number {\n        return this.squareYOffset / this.scale;\n    }\n\n    // Where the square starts in the svg region\n    get squareXOffset(): number {\n        return this.column * this.parent.squareSize;\n    }\n    get squareYOffset(): number {\n        return (8 - this.row) * this.parent.squareSize;\n    }\n\n    get cssClass(): string {\n        return 'chess-square-'\n            + ((this.squareColour === Colour.WHITE) ? 'white' : 'black');\n    }\n    get pieceType(): PieceType {\n        return this._pieceType;\n    }\n    set pieceType(value: PieceType) {\n        this.svgData = new SvgData();\n        let sd = new SvgData();\n        switch (value) {\n            case PieceType.PAWN:\n                if (this.pieceColour === Colour.BLACK) {\n                    sd = SvgPieces.blackPawn;\n                } else {\n                    sd = SvgPieces.whitePawn;\n                }\n                break;\n            case PieceType.KING:\n                if (this.pieceColour === Colour.BLACK) {\n                    sd = SvgPieces.blackKing;\n                } else {\n                    sd = SvgPieces.whiteKing;\n                }\n                break;\n            case PieceType.QUEEN:\n                if (this.pieceColour === Colour.BLACK) {\n                    sd = SvgPieces.blackQueen;\n                } else {\n                    sd = SvgPieces.whiteQueen;\n                }\n                break;\n            case PieceType.ROOK:\n                if (this.pieceColour === Colour.BLACK) {\n                    sd = SvgPieces.blackRook;\n                } else {\n                    sd = SvgPieces.whiteRook;\n                }\n                break;\n            case PieceType.BISHOP:\n                if (this.pieceColour === Colour.BLACK) {\n                    sd = SvgPieces.blackBishop;\n                } else {\n                    sd = SvgPieces.whiteBishop;\n                }\n                break;\n            case PieceType.KNIGHT:\n                if (this.pieceColour === Colour.BLACK) {\n                    sd = SvgPieces.blackKnight;\n                } else {\n                    sd = SvgPieces.whiteKnight;\n                }\n                break;\n        }\n\n        // copy the piece svg data to internal svgData variable\n        for (const sp of sd.paths) {\n            const svp = new SvgPath(sp.d, sp.className);\n            svp.transform = sp.transform;\n            this.svgData.paths.push(svp);\n        }\n        for (const c of sd.circles) {\n            this.svgData.circles.push(new SvgCircle(\n                c.cx,\n                c.cy,\n                c.r,\n                c.className\n            ));\n        }\n        this.adjustPosition();\n        this._pieceType = value;\n    }\n\n\n    public calculateRowColumn() {\n        // Work out which vertical column (file) of the board the square is on (0 - 7)\n        this.column = files.indexOf(this.coordinate[0]);\n        if (this.parent.boardSide === Colour.BLACK) {\n            this.column = 7 - this.column;\n        }\n        // Work out which horizontal row of the board the the square is on (1 - 8)\n        this.row = Number.parseInt(this.coordinate[1], 10);\n        if (this.parent.boardSide === Colour.BLACK) {\n            this.row = 9 - this.row;\n        }\n        // console.log(\"coord: \" + coordinate + \", column: \" + this.column\n        // + \", row:\" + this.row);\n\n    }\n\n\n    adjustPosition() {\n        // Change the starting position to be in the right square.\n        this.scale = this.parent.wholeSize / 400;\n        this.transform = 'scale(' + this.scale.toString()\n            + ',' + this.scale.toString() + ')';\n        this.movePiece(this.pieceXOffset, this.pieceYOffset);\n    }\n\n    init() {\n        // work out whether it's a dark or light square\n        if (this.isEven(this.column)) {\n            if (this.isEven(this.row)) {\n                this.squareColour = Colour.WHITE;\n            } else {\n                this.squareColour = Colour.BLACK;\n            }\n        } else {\n            if (this.isEven(this.row)) {\n                this.squareColour = Colour.BLACK;\n            } else {\n                this.squareColour = Colour.WHITE;\n            }\n        }\n    }\n\n\n    isEven(num): boolean {\n        return (num % 2) === 0;\n    }\n\n    public removePiece() {\n        this.svgData = new SvgData();\n        this._pieceType = undefined;\n        // console.log(\"piece removed from \" + this.coordinate);\n    }\n\n    // Moves the piece relative to its original position\n    private movePiece(x: number, y: number) {\n        // Adjust svg values for actual placement of the square\n        // if (this.pieceColour === Colour.WHITE\n        //     && this.pieceType === PieceType.BISHOP) {\n        //     console.log(\"movePiece \" + this.pieceColour\n        //         + this.pieceType\n        //         + \" to client pos \"\n        //         + Math.round(\n        //             this.parent.boardClientX\n        //             + this.pieceXOffset\n        //             + x) + \",\" \n        //         + Math.round(\n        //             this.parent.boardClientY\n        //             + this.pieceYOffset\n        //             + y));\n        // }\n        for (const sp of this.svgData.paths) {\n            sp.d = this.incrementDXY(sp.origD, x, y);\n        }\n        for (const c of this.svgData.circles) {\n            c.cx = c.origCx + x;\n            c.cy = c.origCy + y;\n        }\n    }\n\n    private incrementDXY(d: string, x: number, y: number): string {\n        let ret = '';\n        let inXNumber = false;\n        let inYNumber = false;\n        let coord = '';\n        for (let i = 0; i < d.length; i++) {\n            let char = d[i];\n            if (char === 'A') {\n                // Elliptical arc, only adjust the last set of coords\n                // Move forward to the 5th space\n                ret += char;\n                let spaceCount = 0;\n                while (spaceCount < 5) {\n                    i++;\n                    char = d[i];\n                    ret += char;\n                    if (char === ' ') {\n                        spaceCount++;\n                    }\n                }\n            }\n            if (inXNumber) {\n                if (char === ',') {\n                    ret += (Number.parseFloat(coord)\n                        + x).toString() + ',';\n                    inXNumber = false;\n                    inYNumber = true;\n                    coord = '';\n                } else {\n                    coord += char;\n                }\n            } else if (inYNumber) {\n                if (char === ' ') {\n                    ret += (Number.parseFloat(coord)\n                        + y).toString() + ' ';\n                    inYNumber = false;\n                    coord = '';\n                } else {\n                    coord += char;\n                }\n            } else if (isNaN(Number.parseInt(char, 10))) {\n                ret += char;\n            } else {\n                inXNumber = true;\n                coord = char;\n            }\n        }\n        return ret;\n    }\n\n    // The mouseDown event is only activated for a chess piece, so\n    // in effect it always signals the start of the move of a piece\n    mouseDown(eventD: MouseEvent) {\n        const initialClientX = eventD.clientX;\n        const initialClientY = eventD.clientY;\n        this.parent.movingByDrag = true;\n        this.parent.movingFromByDrag = this;\n        // subscribe to the move event from the parent\n        const sub = this.parent.mouseMoveLocal.subscribe((eventM) => {\n            this.movePiece(\n                this.pieceXOffset + (eventM.clientX - initialClientX) / this.scale,\n                this.pieceYOffset + (eventM.clientY - initialClientY) / this.scale);\n        });\n\n        // subscribe to the mouse up event\n        const sub2 = this.parent.mouseUpLocal.subscribe((eventU) => {\n            // console.log(\"mouseUp local event received\");\n            sub.unsubscribe();\n            sub2.unsubscribe();\n        });\n\n    }\n\n    touchStart(eventD: TouchEvent) {\n        eventD.preventDefault();\n        let t: Touch = eventD.targetTouches[0];\n        // console.log(\"touch pressed at client pos \" + Math.round(t.clientX)\n        // + \",\" + Math.round(t.clientY));\n        // console.log(\"mouse pressed down for \" + this.coordinate);\n        const initialClientX = t.clientX;\n        const initialClientY = t.clientY;\n        this.parent.movingByDrag = true;\n        this.parent.movingFromByDrag = this;\n        // subscribe to the move event from the parent\n        const sub = this.parent.touchMoveLocal\n            .subscribe((eventM: TouchEvent) => {\n                let t2: Touch;\n                if (eventM.targetTouches.length > 0)\n                    t2 = eventM.targetTouches[0];\n                else\n                    t2 = eventM.changedTouches[0];\n                this.movePiece(\n                    this.pieceXOffset + (t2.clientX - initialClientX) / this.scale,\n                    this.pieceYOffset + (t2.clientY - initialClientY) / this.scale\n                    );\n            });\n\n        // subscribe to the touch end event\n        const sub2 = this.parent.touchEndLocal.subscribe((eventU) => {\n            sub.unsubscribe();\n            sub2.unsubscribe();\n        });\n    }\n\n    public squareClicked() {\n        if (this.pieceType === undefined) {\n            if (this.parent.showProm) {\n                console.log(\"squareClicked \" + this.coordinate);\n            }\n            else if (this.parent.movingByClick) {\n                this.parent.endMoveByClick(this);\n            }\n        }\n    }\n\n    public pieceClicked() {\n        if (this.parent.showProm) {\n            // console.log(\"pieceClicked \" + this.coordinate);\n            this.parent.promPieceSelected.emit(this.pieceType);\n        }\n        else if (this.parent.movingByClick) {\n            this.parent.endMoveByClick(this);\n        }\n        else {\n            this.parent.movingByClick = true;\n            this.parent.movingFromByClick = this;\n        }\n    }\n\n} // End of ChessSquare class\n\n","import { Colour, PieceType, Move } from './chess-enums';\nimport { EventEmitter } from '@angular/core';\n\n/*\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\n// export class ChessMove {\n//     color;\n//     from;\n//     to;\n//     flags;\n//     piece;\n//     // dgm: these needed to exist for typescript\n//     promotion;\n//     captured;\n// }\n\nexport class Chess {\n\n    /* jshint indent: false */\n\n    // public BLACK = 'b';\n    // public WHITE = 'w';\n\n    public EMPTY = -1;\n    public onChange: EventEmitter<void> = new EventEmitter<void>();\n\n\n    SYMBOLS = 'pnbrqkPNBRQK';\n\n    DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\n    POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\n    PAWN_OFFSETS = {\n        b: [16, 32, 17, 15],\n        w: [-16, -32, -17, -15]\n    };\n\n    PIECE_OFFSETS = {\n        n: [-18, -33, -31, -14, 18, 33, 31, 14],\n        b: [-17, -15, 17, 15],\n        r: [-16, 1, 16, -1],\n        q: [-17, -16, -15, 1, 17, 16, 15, -1],\n        k: [-17, -16, -15, 1, 17, 16, 15, -1]\n    };\n\n    ATTACKS = [\n        20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0,\n        0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n        0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n        0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n        0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n        24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0,\n        0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 20, 2, 24, 2, 20, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0,\n        0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0,\n        0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0,\n        0, 20, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 20, 0, 0,\n        20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20\n    ];\n\n    RAYS = [\n        17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0,\n        0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0,\n        0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0,\n        0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0,\n        0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 17, 0, 16, 0, 15, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 0, 0,\n        1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0,\n        0, 0, 0, 0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, -15, 0, -16, 0, -17, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0,\n        0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0,\n        0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0,\n        0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0,\n        -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17\n    ];\n\n    SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\n    public FLAGS = {\n        NORMAL: 'n',\n        CAPTURE: 'c',\n        BIG_PAWN: 'b',\n        EP_CAPTURE: 'e',\n        PROMOTION: 'p',\n        KSIDE_CASTLE: 'k',\n        QSIDE_CASTLE: 'q'\n    };\n\n    BITS = {\n        NORMAL: 1,\n        CAPTURE: 2,\n        BIG_PAWN: 4,\n        EP_CAPTURE: 8,\n        PROMOTION: 16,\n        KSIDE_CASTLE: 32,\n        QSIDE_CASTLE: 64\n    };\n\n    RANK_1 = 7;\n    RANK_2 = 6;\n    RANK_3 = 5;\n    RANK_4 = 4;\n    RANK_5 = 3;\n    RANK_6 = 2;\n    RANK_7 = 1;\n    RANK_8 = 0;\n\n    SQUARES = {\n        a8: 0, b8: 1, c8: 2, d8: 3, e8: 4, f8: 5, g8: 6, h8: 7,\n        a7: 16, b7: 17, c7: 18, d7: 19, e7: 20, f7: 21, g7: 22, h7: 23,\n        a6: 32, b6: 33, c6: 34, d6: 35, e6: 36, f6: 37, g6: 38, h6: 39,\n        a5: 48, b5: 49, c5: 50, d5: 51, e5: 52, f5: 53, g5: 54, h5: 55,\n        a4: 64, b4: 65, c4: 66, d4: 67, e4: 68, f4: 69, g4: 70, h4: 71,\n        a3: 80, b3: 81, c3: 82, d3: 83, e3: 84, f3: 85, g3: 86, h3: 87,\n        a2: 96, b2: 97, c2: 98, d2: 99, e2: 100, f2: 101, g2: 102, h2: 103,\n        a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n    };\n\n    ROOKS = {\n        w: [{ square: this.SQUARES.a1, flag: this.BITS.QSIDE_CASTLE },\n        { square: this.SQUARES.h1, flag: this.BITS.KSIDE_CASTLE }],\n        b: [{ square: this.SQUARES.a8, flag: this.BITS.QSIDE_CASTLE },\n        { square: this.SQUARES.h8, flag: this.BITS.KSIDE_CASTLE }]\n    };\n\n    board = new Array<ChessPiece>(128);\n    kings = { w: this.EMPTY, b: this.EMPTY };\n    public turn = Colour.WHITE;\n    castling: Castling = { w: 0, b: 0 };\n    ep_square = this.EMPTY;\n    half_moves = 0;\n    move_number = 1;\n    history = [];\n    header: any = {};\n\n    constructor(fen?: string) {\n        /* if the user passes in a fen string, load it, else default to\n         * starting position\n         */\n        if (typeof fen === 'undefined') {\n            this.load(this.DEFAULT_POSITION);\n        } else {\n            this.load(fen);\n        }\n    }\n\n    public clear() {\n        this.board = new Array(128);\n        this.kings = { w: this.EMPTY, b: this.EMPTY };\n        this.turn = Colour.WHITE;\n        this.castling = { w: 0, b: 0 };\n        this.ep_square = this.EMPTY;\n        this.half_moves = 0;\n        this.move_number = 1;\n        this.history = [];\n        this.header = {};\n        this.update_setup(this.generate_fen());\n    }\n\n    public reset() {\n        this.load(this.DEFAULT_POSITION);\n    }\n\n    public load(fen) {\n        const tokens = fen.split(/\\s+/);\n        const position = tokens[0];\n        let square = 0;\n\n        if (!this.validate_fen(fen).valid) {\n            return false;\n        }\n\n        this.clear();\n\n        for (let i = 0; i < position.length; i++) {\n            const piece = position.charAt(i);\n\n            if (piece === '/') {\n                square += 8;\n            } else if (this.is_digit(piece)) {\n                square += parseInt(piece, 10);\n            } else {\n                const color = (piece < 'a') ? Colour.WHITE : Colour.BLACK;\n                this.put({ type: piece.toLowerCase(), color: color }, this.algebraic(square));\n                square++;\n            }\n        }\n\n        this.turn = tokens[1];\n\n        if (tokens[2].indexOf('K') > -1) {\n            this.castling.w |= this.BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('Q') > -1) {\n            this.castling.w |= this.BITS.QSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('k') > -1) {\n            this.castling.b |= this.BITS.KSIDE_CASTLE;\n        }\n        if (tokens[2].indexOf('q') > -1) {\n            this.castling.b |= this.BITS.QSIDE_CASTLE;\n        }\n\n        this.ep_square = (tokens[3] === '-') ? this.EMPTY : this.SQUARES[tokens[3]];\n        this.half_moves = parseInt(tokens[4], 10);\n        this.move_number = parseInt(tokens[5], 10);\n\n        this.update_setup(this.generate_fen());\n        this.onChange.emit();\n        return true;\n    }\n\n    /* TODO: this function is pretty much crap - it validates structure but\n     * completely ignores content (e.g. doesn't verify that each side has a king)\n     * ... we should rewrite this, and ditch the silly error_number field while\n     * we're at it\n     */\n    public validate_fen(fen): FenValidationResult {\n        const errors = {\n            0: 'No errors.',\n            1: 'FEN string must contain six space-delimited fields.',\n            2: '6th field (move number) must be a positive integer.',\n            3: '5th field (half move counter) must be a non-negative integer.',\n            4: '4th field (en-passant square) is invalid.',\n            5: '3rd field (castling availability) is invalid.',\n            6: '2nd field (side to move) is invalid.',\n            7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n            8: '1st field (piece positions) is invalid [consecutive numbers].',\n            9: '1st field (piece positions) is invalid [invalid piece].',\n            10: '1st field (piece positions) is invalid [row too large].',\n            11: 'Illegal en-passant square',\n        };\n\n        /* 1st criterion: 6 space-seperated fields? */\n        const tokens = fen.split(/\\s+/);\n        if (tokens.length !== 6) {\n            return { valid: false, error_number: 1, error: errors[1] };\n        }\n\n        /* 2nd criterion: move number field is a integer value > 0? */\n        if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n            return { valid: false, error_number: 2, error: errors[2] };\n        }\n\n        /* 3rd criterion: half move counter is an integer >= 0? */\n        if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n            return { valid: false, error_number: 3, error: errors[3] };\n        }\n\n        /* 4th criterion: 4th field is a valid e.p.-string? */\n        if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n            return { valid: false, error_number: 4, error: errors[4] };\n        }\n\n        /* 5th criterion: 3th field is a valid castle-string? */\n        if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n            return { valid: false, error_number: 5, error: errors[5] };\n        }\n\n        /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n        if (!/^(w|b)$/.test(tokens[1])) {\n            return { valid: false, error_number: 6, error: errors[6] };\n        }\n\n        /* 7th criterion: 1st field contains 8 rows? */\n        const rows = tokens[0].split('/');\n        if (rows.length !== 8) {\n            return { valid: false, error_number: 7, error: errors[7] };\n        }\n\n        /* 8th criterion: every row is valid? */\n        for (let i = 0; i < rows.length; i++) {\n            /* check for right sum of fields AND not two numbers in succession */\n            let sum_fields = 0;\n            let previous_was_number = false;\n\n            for (let k = 0; k < rows[i].length; k++) {\n                if (!isNaN(rows[i][k])) {\n                    if (previous_was_number) {\n                        return { valid: false, error_number: 8, error: errors[8] };\n                    }\n                    sum_fields += parseInt(rows[i][k], 10);\n                    previous_was_number = true;\n                } else {\n                    if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n                        return { valid: false, error_number: 9, error: errors[9] };\n                    }\n                    sum_fields += 1;\n                    previous_was_number = false;\n                }\n            }\n            if (sum_fields !== 8) {\n                return { valid: false, error_number: 10, error: errors[10] };\n            }\n        }\n\n        if ((tokens[3][1] === '3' && tokens[1] === 'w') ||\n            (tokens[3][1] === '6' && tokens[1] === 'b')) {\n            return { valid: false, error_number: 11, error: errors[11] };\n        }\n\n        /* everything's okay! */\n        return { valid: true, error_number: 0, error: errors[0] };\n    }\n\n    generate_fen() {\n        let empty = 0;\n        let fen = '';\n\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            if (this.board[i] === undefined) {\n                empty++;\n            } else {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                const color = this.board[i].color;\n                const piece = this.board[i].type;\n\n                fen += (color === Colour.WHITE) ?\n                    piece.toUpperCase() : piece.toLowerCase();\n            }\n\n            if ((i + 1) & 0x88) {\n                if (empty > 0) {\n                    fen += empty;\n                }\n\n                if (i !== this.SQUARES.h1) {\n                    fen += '/';\n                }\n\n                empty = 0;\n                i += 8;\n            }\n        }\n\n        let cflags = '';\n        if (this.castling[Colour.WHITE] & this.BITS.KSIDE_CASTLE) { cflags += 'K'; }\n        if (this.castling[Colour.WHITE] & this.BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n        if (this.castling[Colour.BLACK] & this.BITS.KSIDE_CASTLE) { cflags += 'k'; }\n        if (this.castling[Colour.BLACK] & this.BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\n        /* do we have an empty castling flag? */\n        cflags = cflags || '-';\n        const epflags = (this.ep_square === this.EMPTY) ? '-' : this.algebraic(this.ep_square);\n\n        return [fen, this.turn, cflags, epflags, this.half_moves, this.move_number].join(' ');\n    }\n\n    set_header(args) {\n        for (let i = 0; i < args.length; i += 2) {\n            if (typeof args[i] === 'string' &&\n                typeof args[i + 1] === 'string') {\n                this.header[args[i]] = args[i + 1];\n            }\n        }\n        return this.header;\n    }\n\n    /* called when the initial board setup is changed with put() or remove().\n     * modifies the SetUp and FEN properties of the header object.  if the FEN is\n     * equal to the default position, the SetUp and FEN are deleted\n     * the setup is only updated if history.length is zero, ie moves haven't been\n     * made.\n     */\n    update_setup(fen) {\n        if (history.length > 0) { return; }\n\n        if (fen !== this.DEFAULT_POSITION) {\n            this.header['SetUp'] = '1';\n            this.header['FEN'] = fen;\n        } else {\n            delete this.header['SetUp'];\n            delete this.header['FEN'];\n        }\n    }\n\n    public get(square) {\n        const piece = this.board[this.SQUARES[square]];\n        return (piece) ? { type: piece.type, color: piece.color } : undefined;\n    }\n\n    public put(piece, square) {\n        /* check for valid piece object */\n        if (!('type' in piece && 'color' in piece)) {\n            return false;\n        }\n\n        /* check for piece */\n        if (this.SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n            return false;\n        }\n\n        /* check for valid square */\n        if (!(square in this.SQUARES)) {\n            return false;\n        }\n\n        const sq = this.SQUARES[square];\n\n        /* don't let the user place more than one king */\n        if (piece.type === PieceType.KING &&\n            !(this.kings[piece.color] === this.EMPTY || this.kings[piece.color] === sq)) {\n            return false;\n        }\n\n        this.board[sq] = { type: piece.type, color: piece.color };\n        if (piece.type === PieceType.KING) {\n            this.kings[piece.color] = sq;\n        }\n\n        this.update_setup(this.generate_fen());\n        return true;\n    }\n\n    public remove(square) {\n        const piece = this.get(square);\n        this.board[this.SQUARES[square]] = undefined;\n        if (piece && piece.type === PieceType.KING) {\n            this.kings[piece.color] = this.EMPTY;\n        }\n\n        this.update_setup(this.generate_fen());\n        return piece;\n    }\n\n    build_move(board, from, to, flags, promotion?) {\n        const move = {\n            color: this.turn,\n            from: from,\n            to: to,\n            flags: flags,\n            piece: board[from].type,\n            // dgm: these needed to exist for typescript\n            promotion: undefined,\n            captured: undefined\n        };\n\n        if (promotion) {\n            move.flags |= this.BITS.PROMOTION;\n            move.promotion = promotion;\n        }\n\n        if (board[to]) {\n            move.captured = board[to].type;\n        } else if (flags & this.BITS.EP_CAPTURE) {\n            move.captured = PieceType.PAWN;\n        }\n        return move;\n    }\n\n    private add_move(board, moves, from, to, flags) {\n        /* if pawn promotion */\n        if (board[from].type === PieceType.PAWN &&\n            (this.rank(to) === this.RANK_8 || this.rank(to) === this.RANK_1)) {\n            const pieces = [PieceType.QUEEN, PieceType.ROOK, PieceType.BISHOP, PieceType.KNIGHT];\n            for (let i = 0, len = pieces.length; i < len; i++) {\n                moves.push(this.build_move(board, from, to, flags, pieces[i]));\n            }\n        } else {\n            moves.push(this.build_move(board, from, to, flags));\n        }\n    }\n\n    generate_moves(options?) {\n\n\n        const moves = [];\n        const us = this.turn;\n        const them = this.swap_color(us);\n        const second_rank = { b: this.RANK_7, w: this.RANK_2 };\n\n        let first_sq = this.SQUARES.a8;\n        let last_sq = this.SQUARES.h1;\n        let single_square = false;\n\n        /* do we want legal moves? */\n        const legal = (typeof options !== 'undefined' && 'legal' in options) ?\n            options.legal : true;\n\n        /* are we generating moves for a single square? */\n        if (typeof options !== 'undefined' && 'square' in options) {\n            if (options.square in this.SQUARES) {\n                first_sq = last_sq = this.SQUARES[options.square];\n                single_square = true;\n            } else {\n                /* invalid square */\n                return [];\n            }\n        }\n\n        for (let i = first_sq; i <= last_sq; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) { i += 7; continue; }\n\n            const piece = this.board[i];\n            if (piece === undefined || piece.color !== us) {\n                continue;\n            }\n\n            if (piece.type === PieceType.PAWN) {\n                /* single square, non-capturing */\n                const square1 = i + this.PAWN_OFFSETS[us][0];\n                if (this.board[square1] === undefined) {\n                    this.add_move(this.board, moves, i, square1, this.BITS.NORMAL);\n\n                    /* double square */\n                    const square = i + this.PAWN_OFFSETS[us][1];\n                    if (second_rank[us] === this.rank(i) && this.board[square] === undefined) {\n                        this.add_move(this.board, moves, i, square, this.BITS.BIG_PAWN);\n                    }\n                }\n\n                /* pawn captures */\n                for (let j = 2; j < 4; j++) {\n                    const square = i + this.PAWN_OFFSETS[us][j];\n                    if (square & 0x88) { continue; }\n\n                    if (this.board[square] !== undefined &&\n                        this.board[square].color === them) {\n                        this.add_move(this.board, moves, i, square, this.BITS.CAPTURE);\n                    } else if (square === this.ep_square) {\n                        this.add_move(this.board, moves, i, this.ep_square, this.BITS.EP_CAPTURE);\n                    }\n                }\n            } else {\n                for (let j = 0, len = this.PIECE_OFFSETS[piece.type].length; j < len; j++) {\n                    const offset = this.PIECE_OFFSETS[piece.type][j];\n                    let square = i;\n\n                    while (true) {\n                        square += offset;\n                        if (square & 0x88) { break; }\n\n                        if (this.board[square] === undefined) {\n                            this.add_move(this.board, moves, i, square, this.BITS.NORMAL);\n                        } else {\n                            if (this.board[square].color === us) { break; }\n                            this.add_move(this.board, moves, i, square, this.BITS.CAPTURE);\n                            break;\n                        }\n\n                        /* break, if knight or king */\n                        if (piece.type === 'n' || piece.type === 'k') { break; }\n                    }\n                }\n            }\n        }\n\n        /* check for castling if: a) we're generating all moves, or b) we're doing\n         * single square move generation on the king's square\n         */\n        if ((!single_square) || last_sq === this.kings[us]) {\n            /* king-side castling */\n            if (this.castling[us] & this.BITS.KSIDE_CASTLE) {\n                const castling_from = this.kings[us];\n                const castling_to = castling_from + 2;\n\n                if (this.board[castling_from + 1] === undefined &&\n                    this.board[castling_to] === undefined &&\n                    !this.attacked(them, this.kings[us]) &&\n                    !this.attacked(them, castling_from + 1) &&\n                    !this.attacked(them, castling_to)) {\n                    this.add_move(this.board, moves, this.kings[us], castling_to,\n                        this.BITS.KSIDE_CASTLE);\n                }\n            }\n\n            /* queen-side castling */\n            if (this.castling[us] & this.BITS.QSIDE_CASTLE) {\n                const castling_from = this.kings[us];\n                const castling_to = castling_from - 2;\n\n                if (this.board[castling_from - 1] === undefined &&\n                    this.board[castling_from - 2] === undefined &&\n                    this.board[castling_from - 3] === undefined &&\n                    !this.attacked(them, this.kings[us]) &&\n                    !this.attacked(them, castling_from - 1) &&\n                    !this.attacked(them, castling_to)) {\n                    this.add_move(this.board, moves, this.kings[us], castling_to,\n                        this.BITS.QSIDE_CASTLE);\n                }\n            }\n        }\n\n        /* return all pseudo-legal moves (this includes moves that allow the king\n         * to be captured)\n         */\n        if (!legal) {\n            return moves;\n        }\n\n        /* filter out illegal moves */\n        const legal_moves = [];\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this.make_move(moves[i]);\n            if (!this.king_attacked(us)) {\n                legal_moves.push(moves[i]);\n            }\n            this.undo_move();\n        }\n\n        return legal_moves;\n    }\n\n    /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n     * (SAN)\n     *\n     * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n     * disambiguation bugs in Fritz and Chessbase.  See below:\n     *\n     * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n     * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n     * 4. ... Ne7 is technically the valid SAN\n     */\n    move_to_san(move, sloppy?) {\n\n        let output = '';\n\n        if (move.flags & this.BITS.KSIDE_CASTLE) {\n            output = 'O-O';\n        } else if (move.flags & this.BITS.QSIDE_CASTLE) {\n            output = 'O-O-O';\n        } else {\n            const disambiguator = this.get_disambiguator(move, sloppy);\n\n            if (move.piece !== PieceType.PAWN) {\n                output += move.piece.toUpperCase() + disambiguator;\n            }\n\n            if (move.flags & (this.BITS.CAPTURE | this.BITS.EP_CAPTURE)) {\n                if (move.piece === PieceType.PAWN) {\n                    output += this.algebraic(move.from)[0];\n                }\n                output += 'x';\n            }\n\n            output += this.algebraic(move.to);\n\n            if (move.flags & this.BITS.PROMOTION) {\n                output += '=' + move.promotion.toUpperCase();\n            }\n        }\n\n        this.make_move(move);\n        if (this.in_check()) {\n            if (this.in_checkmate()) {\n                output += '#';\n            } else {\n                output += '+';\n            }\n        }\n        this.undo_move();\n\n        return output;\n    }\n\n    // parses all of the decorators out of a SAN string\n    stripped_san(move) {\n        return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '');\n    }\n\n    attacked(color, square) {\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            /* did we run off the end of the board */\n            if (i & 0x88) { i += 7; continue; }\n\n            /* if empty square or wrong color */\n            if (this.board[i] === undefined || this.board[i].color !== color) { continue; }\n\n            const piece = this.board[i];\n            const difference = i - square;\n            const index = difference + 119;\n\n            if (this.ATTACKS[index] & (1 << this.SHIFTS[piece.type])) {\n                if (piece.type === PieceType.PAWN) {\n                    if (difference > 0) {\n                        if (piece.color === Colour.WHITE) { return true; }\n                    } else {\n                        if (piece.color === Colour.BLACK) { return true; }\n                    }\n                    continue;\n                }\n\n                /* if the piece is a knight or a king */\n                if (piece.type === 'n' || piece.type === 'k') { return true; }\n\n                const offset = this.RAYS[index];\n                let j = i + offset;\n\n                let blocked = false;\n                while (j !== square) {\n                    if (this.board[j] !== undefined) { blocked = true; break; }\n                    j += offset;\n                }\n\n                if (!blocked) { return true; }\n            }\n        }\n\n        return false;\n    }\n\n    king_attacked(color) {\n        return this.attacked(this.swap_color(color), this.kings[color]);\n    }\n\n    public in_check() {\n        return this.king_attacked(this.turn);\n    }\n\n    public in_checkmate() {\n        return this.in_check() && this.generate_moves().length === 0;\n    }\n\n    public in_stalemate() {\n        return !this.in_check() && this.generate_moves().length === 0;\n    }\n\n    public insufficient_material() {\n        const pieces = {};\n        const bishops = [];\n        let num_pieces = 0;\n        let sq_color = 0;\n\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            sq_color = (sq_color + 1) % 2;\n            if (i & 0x88) { i += 7; continue; }\n\n            const piece = this.board[i];\n            if (piece) {\n                pieces[piece.type] = (piece.type in pieces) ?\n                    pieces[piece.type] + 1 : 1;\n                if (piece.type === PieceType.BISHOP) {\n                    bishops.push(sq_color);\n                }\n                num_pieces++;\n            }\n        }\n\n        /* k vs. k */\n        if (num_pieces === 2) { return true; } else if (num_pieces === 3 && (pieces[PieceType.BISHOP] === 1 ||\n            pieces[PieceType.KNIGHT] === 1)) { return true; } else if (num_pieces === pieces[PieceType.BISHOP] + 2) {\n            let sum = 0;\n            const len = bishops.length;\n            for (let i = 0; i < len; i++) {\n                sum += bishops[i];\n            }\n            if (sum === 0 || sum === len) { return true; }\n        }\n\n        return false;\n    }\n\n    public in_threefold_repetition() {\n        /* TODO: while this function is fine for casual use, a better\n         * implementation would use a Zobrist key (instead of FEN). the\n         * Zobrist key would be maintained in the make_move/undo_move functions,\n         * avoiding the costly that we do below.\n         */\n        const moves = [];\n        const positions = {};\n        let repetition = false;\n\n        while (true) {\n            const move = this.undo_move();\n            if (!move) { break; }\n            moves.push(move);\n        }\n\n        while (true) {\n            /* remove the last two fields in the FEN string, they're not needed\n             * when checking for draw by rep */\n            const fen = this.generate_fen().split(' ').slice(0, 4).join(' ');\n\n            /* has the position occurred three or move times */\n            positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n            if (positions[fen] >= 3) {\n                repetition = true;\n            }\n\n            if (!moves.length) {\n                break;\n            }\n            this.make_move(moves.pop());\n        }\n\n        return repetition;\n    }\n\n    push(move) {\n        this.history.push({\n            move: move,\n            kings: { b: this.kings.b, w: this.kings.w },\n            turn: this.turn,\n            castling: { b: this.castling.b, w: this.castling.w },\n            ep_square: this.ep_square,\n            half_moves: this.half_moves,\n            move_number: this.move_number\n        });\n    }\n\n    make_move(move) {\n        const us: Colour = this.turn;\n        const them = this.swap_color(us);\n        this.push(move);\n\n        this.board[move.to] = this.board[move.from];\n        this.board[move.from] = undefined;\n\n        /* if ep capture, remove the captured pawn */\n        if (move.flags & this.BITS.EP_CAPTURE) {\n            if (this.turn === Colour.BLACK) {\n                this.board[move.to - 16] = undefined;\n            } else {\n                this.board[move.to + 16] = undefined;\n            }\n        }\n\n        /* if pawn promotion, replace with new piece */\n        if (move.flags & this.BITS.PROMOTION) {\n            this.board[move.to] = { type: move.promotion, color: us };\n        }\n\n        /* if we moved the king */\n        if (this.board[move.to].type === PieceType.KING) {\n            this.kings[this.board[move.to].color] = move.to;\n\n            /* if we castled, move the rook next to the king */\n            if (move.flags & this.BITS.KSIDE_CASTLE) {\n                const castling_to = move.to - 1;\n                const castling_from = move.to + 1;\n                this.board[castling_to] = this.board[castling_from];\n                this.board[castling_from] = undefined;\n            } else if (move.flags & this.BITS.QSIDE_CASTLE) {\n                const castling_to2 = move.to + 1;\n                const castling_from2 = move.to - 2;\n                this.board[castling_to2] = this.board[castling_from2];\n                this.board[castling_from2] = undefined;\n            }\n\n            /* turn off castling */\n            this.castling[us] = '';\n        }\n\n        /* turn off castling if we move a rook */\n        if (this.castling[us]) {\n            for (let i = 0, len = this.ROOKS[us].length; i < len; i++) {\n                if (move.from === this.ROOKS[us][i].square &&\n                    this.castling[us] & this.ROOKS[us][i].flag) {\n                    this.castling[us] ^= this.ROOKS[us][i].flag;\n                    break;\n                }\n            }\n        }\n\n        /* turn off castling if we capture a rook */\n        if (this.castling[them]) {\n            for (let i = 0, len = this.ROOKS[them].length; i < len; i++) {\n                if (move.to === this.ROOKS[them][i].square &&\n                    this.castling[them] & this.ROOKS[them][i].flag) {\n                    this.castling[them] ^= this.ROOKS[them][i].flag;\n                    break;\n                }\n            }\n        }\n\n        /* if big pawn move, update the en passant square */\n        if (move.flags & this.BITS.BIG_PAWN) {\n            if (this.turn === 'b') {\n                this.ep_square = move.to - 16;\n            } else {\n                this.ep_square = move.to + 16;\n            }\n        } else {\n            this.ep_square = this.EMPTY;\n        }\n\n        /* reset the 50 move counter if a pawn is moved or a piece is captured */\n        if (move.piece === PieceType.PAWN) {\n            this.half_moves = 0;\n        } else if (move.flags & (this.BITS.CAPTURE | this.BITS.EP_CAPTURE)) {\n            this.half_moves = 0;\n        } else {\n            this.half_moves++;\n        }\n\n        if (this.turn === Colour.BLACK) {\n            this.move_number++;\n        }\n        this.turn = this.swap_color(this.turn);\n    }\n\n    undo_move() {\n        const old = this.history.pop();\n        if (old === undefined) { return undefined; }\n\n        const move = old.move;\n        this.kings = old.kings;\n        this.turn = old.turn;\n        this.castling = old.castling;\n        this.ep_square = old.ep_square;\n        this.half_moves = old.half_moves;\n        this.move_number = old.move_number;\n\n        const us = this.turn;\n        const them = this.swap_color(this.turn);\n\n        this.board[move.from] = this.board[move.to];\n        this.board[move.from].type = move.piece;  // to undo any promotions\n        this.board[move.to] = undefined;\n\n        if (move.flags & this.BITS.CAPTURE) {\n            this.board[move.to] = { type: move.captured, color: them };\n        } else if (move.flags & this.BITS.EP_CAPTURE) {\n            let index;\n            if (us === Colour.BLACK) {\n                index = move.to - 16;\n            } else {\n                index = move.to + 16;\n            }\n            this.board[index] = { type: PieceType.PAWN, color: them };\n        }\n\n\n        if (move.flags & (this.BITS.KSIDE_CASTLE | this.BITS.QSIDE_CASTLE)) {\n            let castling_to, castling_from;\n            if (move.flags & this.BITS.KSIDE_CASTLE) {\n                castling_to = move.to + 1;\n                castling_from = move.to - 1;\n            } else if (move.flags & this.BITS.QSIDE_CASTLE) {\n                castling_to = move.to - 2;\n                castling_from = move.to + 1;\n            }\n\n            this.board[castling_to] = this.board[castling_from];\n            this.board[castling_from] = undefined;\n        }\n        return move;\n    }\n\n    /* this function is used to uniquely identify ambiguous moves */\n    get_disambiguator(move, sloppy) {\n        const moves = this.generate_moves({ legal: !sloppy });\n\n        const from = move.from;\n        const to = move.to;\n        const piece = move.piece;\n\n        let ambiguities = 0;\n        let same_rank = 0;\n        let same_file = 0;\n\n        for (let i = 0, len = moves.length; i < len; i++) {\n            const ambig_from = moves[i].from;\n            const ambig_to = moves[i].to;\n            const ambig_piece = moves[i].piece;\n\n            /* if a move of the same piece type ends on the same to square, we'll\n             * need to add a disambiguator to the algebraic notation\n             */\n            if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n                ambiguities++;\n\n                if (this.rank(from) === this.rank(ambig_from)) {\n                    same_rank++;\n                }\n\n                if (this.file(from) === this.file(ambig_from)) {\n                    same_file++;\n                }\n            }\n        }\n\n        if (ambiguities > 0) {\n            /* if there exists a similar moving piece on the same rank and file as\n             * the move in question, use the square as the disambiguator\n             */\n            if (same_rank > 0 && same_file > 0) {\n                return this.algebraic(from);\n            } else if (same_file > 0) {\n                return this.algebraic(from).charAt(1);\n            } else {\n                return this.algebraic(from).charAt(0);\n            }\n        }\n\n        return '';\n    }\n\n    public ascii() {\n        let s = '   +------------------------+\\n';\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            /* display the rank */\n            if (this.file(i) === 0) {\n                s += ' ' + '87654321'[this.rank(i)] + ' |';\n            }\n\n            /* empty piece */\n            if (this.board[i] === undefined) {\n                s += ' . ';\n            } else {\n                const piece = this.board[i].type;\n                const color = this.board[i].color;\n                const symbol = (color === Colour.WHITE) ?\n                    piece.toUpperCase() : piece.toLowerCase();\n                s += ' ' + symbol + ' ';\n            }\n\n            if ((i + 1) & 0x88) {\n                s += '|\\n';\n                i += 8;\n            }\n        }\n        s += '   +------------------------+\\n';\n        s += '     a  b  c  d  e  f  g  h\\n';\n\n        return s;\n    }\n\n    // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n    move_from_san(move, sloppy) {\n        // strip off any move decorations: e.g Nf3+?!\n        const clean_move = this.stripped_san(move);\n\n        // if we're using the sloppy parser run a regex to grab piece, to, and from\n        // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n        const matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n        let piece;\n        let from;\n        let to;\n        let promotion;\n        if (sloppy) {\n            if (matches) {\n                piece = matches[1];\n                from = matches[2];\n                to = matches[3];\n                promotion = matches[4];\n            }\n        }\n\n        const moves = this.generate_moves();\n        for (let i = 0, len = moves.length; i < len; i++) {\n            // try the strict parser first, then the sloppy parser if requested\n            // by the user\n            if ((clean_move === this.stripped_san(this.move_to_san(moves[i]))) ||\n                (sloppy && clean_move === this.stripped_san(this.move_to_san(moves[i], true)))) {\n                return moves[i];\n            } else {\n                if (matches &&\n                    (!piece || piece.toLowerCase() === moves[i].piece) &&\n                    this.SQUARES[from] === moves[i].from &&\n                    this.SQUARES[to] === moves[i].to &&\n                    (!promotion || promotion.toLowerCase() === moves[i].promotion)) {\n                    return moves[i];\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n\n    /*****************************************************************************\n     * UTILITY FUNCTIONS\n     ****************************************************************************/\n    rank(i) {\n        return i >> 4;\n    }\n\n    file(i) {\n        return i & 15;\n    }\n\n    algebraic(i) {\n        const f = this.file(i), r = this.rank(i);\n        return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1);\n    }\n\n    swap_color(c) {\n        return c === Colour.WHITE ? Colour.BLACK : Colour.WHITE;\n    }\n\n    is_digit(c) {\n        return '0123456789'.indexOf(c) !== -1;\n    }\n\n    /* pretty = external move object */\n    make_pretty(ugly_move) {\n        const move = this.clone(ugly_move);\n        move.san = this.move_to_san(move, false);\n        move.to = this.algebraic(move.to);\n        move.from = this.algebraic(move.from);\n\n        let flags = '';\n\n        for (const flag in this.BITS) {\n            if (this.BITS[flag] & move.flags) {\n                flags += this.FLAGS[flag];\n            }\n        }\n        move.flags = flags;\n\n        return move;\n    }\n\n    clone(obj) {\n        const dupe: any = (obj instanceof Array) ? [] : {};\n\n        for (const property in obj) {\n            if (typeof property === 'object') {\n                dupe[property] = this.clone(obj[property]);\n            } else {\n                dupe[property] = obj[property];\n            }\n        }\n\n        return dupe;\n    }\n\n    trim(str) {\n        return str.replace(/^\\s+|\\s+$/g, '');\n    }\n\n    /*****************************************************************************\n     * DEBUGGING UTILITIES\n     ****************************************************************************/\n    public perft(depth) {\n        const moves = this.generate_moves({ legal: false });\n        let nodes = 0;\n        const color = this.turn;\n\n        for (let i = 0, len = moves.length; i < len; i++) {\n            this.make_move(moves[i]);\n            if (!this.king_attacked(color)) {\n                if (depth - 1 > 0) {\n                    const child_nodes = this.perft(depth - 1);\n                    nodes += child_nodes;\n                } else {\n                    nodes++;\n                }\n            }\n            this.undo_move();\n        }\n\n        return nodes;\n    }\n\n    public getSquares() {\n        /* from the ECMA-262 spec (section 12.6.4):\n         * \"The mechanics of enumerating the properties ... is\n         * implementation dependent\"\n         * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n         * ordered correctly\n         */\n        const keys = [];\n        for (let i = this.SQUARES.a8; i <= this.SQUARES.h1; i++) {\n            if (i & 0x88) { i += 7; continue; }\n            keys.push(this.algebraic(i));\n        }\n        return keys;\n    }\n\n    public getMoves(options) {\n        /* The internal representation of a chess move is in 0x88 format, and\n                 * not meant to be human-readable.  The code below converts the 0x88\n                 * square coordinates to algebraic coordinates.  It also prunes an\n                 * unnecessary move keys resulting from a verbose call.\n                 */\n\n        const ugly_moves = this.generate_moves(options);\n        const moves = [];\n\n        for (let i = 0, len = ugly_moves.length; i < len; i++) {\n\n            /* does the user want a full move object (most likely not), or just\n             * SAN\n             */\n            if (typeof options !== 'undefined' && 'verbose' in options &&\n                options.verbose) {\n                moves.push(this.make_pretty(ugly_moves[i]));\n            } else {\n                moves.push(this.move_to_san(ugly_moves[i], false));\n            }\n        }\n\n        return moves;\n    }\n\n    public get in_draw() {\n        return this.half_moves >= 100 ||\n            this.in_stalemate() ||\n            this.insufficient_material() ||\n            this.in_threefold_repetition();\n    }\n\n    public get game_over() {\n        return this.half_moves >= 100 ||\n            this.in_checkmate() ||\n            this.in_stalemate() ||\n            this.insufficient_material() ||\n            this.in_threefold_repetition();\n    }\n\n    public get fen() {\n        return this.generate_fen();\n    }\n\n    public getPgn(options) {\n        /* using the specification from http://www.chessclub.com/help/PGN-spec\n                 * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n                 */\n        const newline = (typeof options === 'object' &&\n            typeof options.newline_char === 'string') ?\n            options.newline_char : '\\n';\n        const max_width = (typeof options === 'object' &&\n            typeof options.max_width === 'number') ?\n            options.max_width : 0;\n        const result = [];\n        let header_exists = false;\n\n        /* add the PGN header headerrmation */\n        for (const i in this.header) {\n            /* TODO: order of enumerated properties in header object is not\n             * guaranteed, see ECMA-262 spec (section 12.6.4)\n             */\n            result.push('[' + i + ' \\\"' + this.header[i] + '\\\"]' + newline);\n            header_exists = true;\n        }\n\n        if (header_exists && history.length) {\n            result.push(newline);\n        }\n\n        /* pop all of history onto reversed_history */\n        const reversed_history = [];\n        while (history.length > 0) {\n            reversed_history.push(this.undo_move());\n        }\n\n        const moves = [];\n        let move_string = '';\n\n        /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n        while (reversed_history.length > 0) {\n            const move = reversed_history.pop();\n\n            /* if the position started with black to move, start PGN with 1. ... */\n            if (!history.length && move.color === 'b') {\n                move_string = this.move_number + '. ...';\n            } else if (move.color === 'w') {\n                /* store the previous generated move_string if we have one */\n                if (move_string.length) {\n                    moves.push(move_string);\n                }\n                move_string = this.move_number + '.';\n            }\n\n            move_string = move_string + ' ' + this.move_to_san(move, false);\n            this.make_move(move);\n        }\n\n        /* are there any other leftover moves? */\n        if (move_string.length) {\n            moves.push(move_string);\n        }\n\n        /* is there a result? */\n        if (typeof this.header.Result !== 'undefined') {\n            moves.push(this.header.Result);\n        }\n\n        /* history should be back to what is was before we started generating PGN,\n         * so join together moves\n         */\n        if (max_width === 0) {\n            return result.join('') + moves.join(' ');\n        }\n\n        /* wrap the PGN output at max_width */\n        let current_width = 0;\n        for (let i2 = 0; i2 < moves.length; i2++) {\n            /* if the current move will push past max_width */\n            if (current_width + moves[i2].length > max_width && i2 !== 0) {\n\n                /* don't end the line with whitespace */\n                if (result[result.length - 1] === ' ') {\n                    result.pop();\n                }\n\n                result.push(newline);\n                current_width = 0;\n            } else if (i2 !== 0) {\n                result.push(' ');\n                current_width++;\n            }\n            result.push(moves[i2]);\n            current_width += moves[i2].length;\n        }\n\n        return result.join('');\n    }\n\n    public load_pgn(pgn, options) {\n        // allow the user to specify the sloppy move parser to work around over\n        // disambiguation bugs in Fritz and Chessbase\n        const sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n            options.sloppy : false;\n\n        function mask(str) {\n            return str.replace(/\\\\/g, '\\\\');\n        }\n\n        function has_keys(object) {\n            for (const key in object) {\n                return true;\n            }\n            return false;\n        }\n\n        function parse_pgn_header(header, hOptions) {\n            const hNewline_char = (typeof hOptions === 'object' &&\n                typeof hOptions.newline_char === 'string') ?\n                hOptions.newline_char : '\\r?\\n';\n            const header_obj = {};\n            const lHeaders = header.split(new RegExp(mask(hNewline_char)));\n            let key = '';\n            let value = '';\n\n            for (let i = 0; i < lHeaders.length; i++) {\n                key = lHeaders[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n                value = lHeaders[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n                if (this.trim(key).length > 0) {\n                    header_obj[key] = value;\n                }\n            }\n\n            return header_obj;\n        }\n\n        const newline_char = (typeof options === 'object' &&\n            typeof options.newline_char === 'string') ?\n            options.newline_char : '\\r?\\n';\n        const regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n            '(' + mask(newline_char) + ')*' +\n            '1.(' + mask(newline_char) + '|.)*$', 'g');\n\n        /* get header part of the PGN file */\n        let header_string = pgn.replace(regex, '$1');\n\n        /* no info part given, begins with moves */\n        if (header_string[0] !== '[') {\n            header_string = '';\n        }\n\n        this.reset();\n\n        /* parse PGN header */\n        const headers = parse_pgn_header(header_string, options);\n        for (const key in headers) {\n            this.set_header([key, headers[key]]);\n        }\n\n        /* load the starting position indicated by [Setup '1'] and\n        * [FEN position] */\n        if (headers['SetUp'] === '1') {\n            if (!(('FEN' in headers) && this.load(headers['FEN']))) {\n                return false;\n            }\n        }\n\n        /* delete header to get the moves */\n        let ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\n        /* delete comments */\n        ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\n        /* delete recursive annotation variations */\n        const rav_regex = /(\\([^\\(\\)]+\\))+?/g;\n        while (rav_regex.test(ms)) {\n            ms = ms.replace(rav_regex, '');\n        }\n\n        /* delete move numbers */\n        ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\n        /* delete ... indicating black to move */\n        ms = ms.replace(/\\.\\.\\./g, '');\n\n        /* delete numeric annotation glyphs */\n        ms = ms.replace(/\\$\\d+/g, '');\n\n        /* trim and get array of moves */\n        let moves = this.trim(ms).split(new RegExp(/\\s+/));\n\n        /* delete empty entries */\n        moves = moves.join(',').replace(/,,+/g, ',').split(',');\n        let move = '';\n\n        for (let half_move = 0; half_move < moves.length - 1; half_move++) {\n            move = this.move_from_san(moves[half_move], sloppy);\n\n            /* move not possible! (don't clear the board to examine to show the\n             * latest valid position)\n             */\n            if (move === undefined) {\n                return false;\n            } else {\n                this.make_move(move);\n            }\n        }\n\n        /* examine last move */\n        move = moves[moves.length - 1];\n        if (this.POSSIBLE_RESULTS.indexOf(move) > -1) {\n            if (has_keys(this.header) && typeof this.header.Result === 'undefined') {\n                this.set_header(['Result', move]);\n            }\n        } else {\n            move = this.move_from_san(move, sloppy);\n            if (move === undefined) {\n                return false;\n            } else {\n                this.make_move(move);\n            }\n        }\n        return true;\n    }\n\n    public getHeader() {\n        return this.set_header(arguments);\n    }\n\n    public move(move: Move | string, options?) {\n        /* The move function can be called with in the following parameters:\n                 *\n                 * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n                 *\n                 * .move({ from: 'h7', <- where the 'move' is a move object (additional\n                 *         to :'h8',      fields are ignored)\n                 *         promotion: 'q',\n                 *      })\n                 */\n\n        // allow the user to specify the sloppy move parser to work around over\n        // disambiguation bugs in Fritz and Chessbase\n        const sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n            options.sloppy : false;\n\n        let move_obj;\n\n        if (typeof move === 'string') {\n            move_obj = this.move_from_san(move, sloppy);\n        } else if (typeof move === 'object') {\n            const moves = this.generate_moves();\n\n            /* convert the pretty move object to an ugly move object */\n            for (let i = 0, len = moves.length; i < len; i++) {\n                if (move.from === this.algebraic(moves[i].from) &&\n                    move.to === this.algebraic(moves[i].to) &&\n                    (!('promotion' in moves[i]) ||\n                        move.promotion === moves[i].promotion)) {\n                    move_obj = moves[i];\n                    break;\n                }\n            }\n        }\n\n        /* failed to find move */\n        if (!move_obj) {\n            return undefined;\n        }\n\n        /* need to make a copy of move because we can't generate SAN after the\n         * move is made\n         */\n        const pretty_move = this.make_pretty(move_obj);\n\n        this.make_move(move_obj);\n        this.onChange.emit();\n        return pretty_move;\n    }\n\n    public undo() {\n        const move = this.undo_move();\n        this.onChange.emit();\n        return (move) ? this.make_pretty(move) : undefined;\n    }\n\n    public square_color(square) {\n        if (square in this.SQUARES) {\n            const sq_0x88 = this.SQUARES[square];\n            return ((this.rank(sq_0x88) + this.file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n        }\n\n        return undefined;\n    }\n\n    public getHistory(options) {\n        const reversed_history = [];\n        const move_history = [];\n        const verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n            options.verbose);\n\n        while (history.length > 0) {\n            reversed_history.push(this.undo_move());\n        }\n\n        while (reversed_history.length > 0) {\n            const move = reversed_history.pop();\n            if (verbose) {\n                move_history.push(this.make_pretty(move));\n            } else {\n                move_history.push(this.move_to_san(move));\n            }\n            this.make_move(move);\n        }\n\n        return move_history;\n    }\n\n} // End of Chess class\n\nexport class FenValidationResult {\n    // { valid: true, error_number: 0, error: errors[0] };\n    valid: boolean;\n    error_number: number;\n    error: string;\n}\n\nexport class ChessPiece {\n    color;\n    type;\n}\n\n// enum Colour {\n//     WHITE = 'w',\n//     BLACK = 'b'\n// }\n\nclass Castling {\n    w: any;\n    b: any;\n}\n\n\n\n","module.exports = \".chess-square-white {\\n    fill: #ffffff;\\n    stroke-width:1;\\n    stroke:rgb(0,0,0);\\n  }\\n  \\n  .chess-square-black {\\n    fill: #b7d7d9;\\n    stroke-width:1;\\n    stroke:rgb(0,0,0);\\n  }\\n  \\n  .white-piece {\\n    opacity: 1;\\n    fill: #ffffff;\\n    fill-opacity: 1;\\n    fill-rule: nonzero;\\n    stroke: #000000;\\n    stroke-width: 1.5;\\n    stroke-linecap: round;\\n    stroke-linejoin: miter;\\n    stroke-miterlimit: 4;\\n    stroke-dasharray: none;\\n    stroke-opacity: 1;\\n  }\\n  \\n  .white-circle {\\n    fill: #9e4a4a;\\n    stroke: #9c4747;\\n    stroke-width: 1.5;\\n  }\\n  \\n  .black-piece {\\n    fill:none; \\n    fill-opacity: 1;\\n    fill-rule:evenodd;\\n    stroke: #000000;\\n    stroke-width: 1.5;\\n    stroke-linecap:round;\\n    stroke-linejoin:round;\\n    stroke-miterlimit:4; \\n    stroke-dasharray:none; \\n    stroke-opacity:1;\\n  }\\n  \\n  .black-body {\\n    fill:#000000;\\n    stroke:#000000;\\n    fill-opacity:1;\\n    stroke-linecap:butt;\\n    stroke-linejoin:miter;\\n  }\\n  \\n  .white-body {\\n    fill:#ffffff;\\n    stroke:#000000;\\n    fill-opacity:1;\\n    stroke-linecap:butt;\\n    stroke-linejoin:miter;\\n    fill-rule:evenodd;\\n    stroke-width:1.5;\\n    stroke-miterlimit:4;\\n    stroke-dasharray:none;\\n    stroke-opacity:1;\\n  }\\n  \\n  .white-line {\\n    fill:none;\\n    stroke:#ffffff;\\n  }\\n  \\n  .black-line {\\n    fill:none;\\n    stroke:#000000;\\n  }\\n  \\n  .white-line-inner {\\n    fill:#ffffff;\\n    stroke: none;\\n  }\\n  \\n  .black-line-inner {\\n    fill:#000000;\\n    stroke: none;\\n  }\\n  \\n  .draggable {\\n    cursor: -webkit-grab;\\n  }\\n  \\n  /* svg {\\n    display: block;\\n  } */\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hlc3Nib2FyZC9jaGVzc2JvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtHQUNuQjs7RUFFRDtJQUNFLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JBQWtCO0dBQ25COztFQUVEO0lBQ0UsV0FBVztJQUNYLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2QixxQkFBcUI7SUFDckIsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtHQUNuQjs7RUFFRDtJQUNFLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0dBQ25COztFQUdEO0lBQ0UsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsaUJBQWlCO0dBQ2xCOztFQUVEO0lBQ0UsYUFBYTtJQUNiLGVBQWU7SUFDZixlQUFlO0lBQ2Ysb0JBQW9CO0lBQ3BCLHNCQUFzQjtHQUN2Qjs7RUFFRDtJQUNFLGFBQWE7SUFDYixlQUFlO0lBQ2YsZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsc0JBQXNCO0lBQ3RCLGlCQUFpQjtHQUNsQjs7RUFFRDtJQUNFLFVBQVU7SUFDVixlQUFlO0dBQ2hCOztFQUVEO0lBQ0UsVUFBVTtJQUNWLGVBQWU7R0FDaEI7O0VBRUQ7SUFDRSxhQUFhO0lBQ2IsYUFBYTtHQUNkOztFQUVEO0lBQ0UsYUFBYTtJQUNiLGFBQWE7R0FDZDs7RUFFRDtJQUNFLHFCQUFxQjtHQUN0Qjs7RUFFRDs7TUFFSSIsImZpbGUiOiJzcmMvYXBwL2NoZXNzYm9hcmQvY2hlc3Nib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoZXNzLXNxdWFyZS13aGl0ZSB7XG4gICAgZmlsbDogI2ZmZmZmZjtcbiAgICBzdHJva2Utd2lkdGg6MTtcbiAgICBzdHJva2U6cmdiKDAsMCwwKTtcbiAgfVxuICBcbiAgLmNoZXNzLXNxdWFyZS1ibGFjayB7XG4gICAgZmlsbDogI2I3ZDdkOTtcbiAgICBzdHJva2Utd2lkdGg6MTtcbiAgICBzdHJva2U6cmdiKDAsMCwwKTtcbiAgfVxuXG4gIC53aGl0ZS1waWVjZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBmaWxsOiAjZmZmZmZmO1xuICAgIGZpbGwtb3BhY2l0eTogMTtcbiAgICBmaWxsLXJ1bGU6IG5vbnplcm87XG4gICAgc3Ryb2tlOiAjMDAwMDAwO1xuICAgIHN0cm9rZS13aWR0aDogMS41O1xuICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcbiAgICBzdHJva2UtbGluZWpvaW46IG1pdGVyO1xuICAgIHN0cm9rZS1taXRlcmxpbWl0OiA0O1xuICAgIHN0cm9rZS1kYXNoYXJyYXk6IG5vbmU7XG4gICAgc3Ryb2tlLW9wYWNpdHk6IDE7XG4gIH1cblxuICAud2hpdGUtY2lyY2xlIHtcbiAgICBmaWxsOiAjOWU0YTRhO1xuICAgIHN0cm9rZTogIzljNDc0NztcbiAgICBzdHJva2Utd2lkdGg6IDEuNTtcbiAgfVxuICBcbiBcbiAgLmJsYWNrLXBpZWNlIHtcbiAgICBmaWxsOm5vbmU7IFxuICAgIGZpbGwtb3BhY2l0eTogMTtcbiAgICBmaWxsLXJ1bGU6ZXZlbm9kZDtcbiAgICBzdHJva2U6ICMwMDAwMDA7XG4gICAgc3Ryb2tlLXdpZHRoOiAxLjU7XG4gICAgc3Ryb2tlLWxpbmVjYXA6cm91bmQ7XG4gICAgc3Ryb2tlLWxpbmVqb2luOnJvdW5kO1xuICAgIHN0cm9rZS1taXRlcmxpbWl0OjQ7IFxuICAgIHN0cm9rZS1kYXNoYXJyYXk6bm9uZTsgXG4gICAgc3Ryb2tlLW9wYWNpdHk6MTtcbiAgfVxuICBcbiAgLmJsYWNrLWJvZHkge1xuICAgIGZpbGw6IzAwMDAwMDtcbiAgICBzdHJva2U6IzAwMDAwMDtcbiAgICBmaWxsLW9wYWNpdHk6MTtcbiAgICBzdHJva2UtbGluZWNhcDpidXR0O1xuICAgIHN0cm9rZS1saW5lam9pbjptaXRlcjtcbiAgfVxuXG4gIC53aGl0ZS1ib2R5IHtcbiAgICBmaWxsOiNmZmZmZmY7XG4gICAgc3Ryb2tlOiMwMDAwMDA7XG4gICAgZmlsbC1vcGFjaXR5OjE7XG4gICAgc3Ryb2tlLWxpbmVjYXA6YnV0dDtcbiAgICBzdHJva2UtbGluZWpvaW46bWl0ZXI7XG4gICAgZmlsbC1ydWxlOmV2ZW5vZGQ7XG4gICAgc3Ryb2tlLXdpZHRoOjEuNTtcbiAgICBzdHJva2UtbWl0ZXJsaW1pdDo0O1xuICAgIHN0cm9rZS1kYXNoYXJyYXk6bm9uZTtcbiAgICBzdHJva2Utb3BhY2l0eToxO1xuICB9XG5cbiAgLndoaXRlLWxpbmUge1xuICAgIGZpbGw6bm9uZTtcbiAgICBzdHJva2U6I2ZmZmZmZjtcbiAgfVxuXG4gIC5ibGFjay1saW5lIHtcbiAgICBmaWxsOm5vbmU7XG4gICAgc3Ryb2tlOiMwMDAwMDA7XG4gIH1cblxuICAud2hpdGUtbGluZS1pbm5lciB7XG4gICAgZmlsbDojZmZmZmZmO1xuICAgIHN0cm9rZTogbm9uZTtcbiAgfVxuXG4gIC5ibGFjay1saW5lLWlubmVyIHtcbiAgICBmaWxsOiMwMDAwMDA7XG4gICAgc3Ryb2tlOiBub25lO1xuICB9XG5cbiAgLmRyYWdnYWJsZSB7XG4gICAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gIH1cblxuICAvKiBzdmcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9ICovXG5cbiJdfQ== */\"","module.exports = \"<svg (mousemove)=\\\"mouseMove($event)\\\"\\n(touchmove)=\\\"touchMove($event)\\\"\\n(touchend)=\\\"touchEnd($event)\\\"\\n(mouseup)=\\\"mouseUp($event)\\\"\\n[attr.viewBox]=\\\"viewBox\\\" [attr.width]=\\\"wholeSize\\\"\\n  [attr.height]=\\\"wholeSize\\\" #svgRegion>\\n  <g *ngFor=\\\"let square of squaresMap | keyvalue\\\" \\n  (mousedown)=\\\"square.value.mouseDown($event)\\\" \\n  (touchstart)=\\\"square.value.touchStart($event)\\\"\\n  (click)=\\\"square.value.squareClicked()\\\"\\n  >\\n    <rect [attr.class]=\\\"square.value.cssClass\\\" [attr.width]=\\\"square.value.parent.squareSize\\\" [attr.height]=\\\"square.value.parent.squareSize\\\"\\n      [attr.x]=\\\"square.value.squareXOffset\\\" [attr.y]=\\\"square.value.squareYOffset\\\"\\n      >\\n    </rect>\\n  </g>\\n  <g *ngFor=\\\"let square of squaresMap | keyvalue\\\" \\n  class=\\\"draggable\\\" (mousedown)=\\\"square.value.mouseDown($event)\\\" (touchstart)=\\\"square.value.touchStart($event)\\\"\\n    [attr.transform]=\\\"square.value.transform\\\">\\n    <path *ngFor=\\\"let svgPath of square.value.svgData.paths\\\" \\n    [attr.d]=\\\"svgPath.d\\\" [attr.class]=\\\"svgPath.className\\\"\\n      [attr.transform]=\\\"svgPath.transform\\\" />\\n    <circle *ngFor=\\\"let circle of square.value.svgData.circles\\\" [attr.cx]=\\\"circle.cx\\\" [attr.cy]=\\\"circle.cy\\\" [attr.r]=\\\"circle.r\\\"\\n      [attr.classname]=\\\"circle.className\\\" />\\n  </g>\\n\\n</svg>\\n<br>\\n<button mat-icon-button matTooltip=\\\"Show promotion dialog\\\" (click)=\\\"getPromotionPiece()\\\">\\n  <mat-icon>skip_next\\n  </mat-icon>\\n</button>\\n\"","\nimport {\n    Component, OnInit, ChangeDetectorRef,\n    EventEmitter, ElementRef, ViewChild, AfterViewInit\n} from '@angular/core';\nimport { ChessSquare } from './chess-square';\nimport { files, Move, Colour, PieceType } from './chess-enums';\nimport { Chess, FenValidationResult, ChessPiece } from './chess';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-chessboard',\n    templateUrl: './chessboard.component.html',\n    styleUrls: ['./chessboard.component.css']\n})\nexport class ChessboardComponent implements OnInit, AfterViewInit {\n\n    public squaresMap = new Map<string, ChessSquare>();\n    public mouseMoveLocal = new EventEmitter<MouseEvent>();\n    public touchMoveLocal = new EventEmitter<TouchEvent>();\n    public mouseUpLocal = new EventEmitter<MouseEvent>();\n    public touchEndLocal = new EventEmitter<TouchEvent>();\n    public movingByDrag = false;\n    public movingByClick = false;\n    public movingFromByDrag: ChessSquare;\n    public movingFromByClick: ChessSquare;\n    public chess: Chess;\n    public boardSide: Colour = Colour.WHITE;\n    public moveMade: EventEmitter<Move> = new EventEmitter<Move>();\n    @ViewChild('svgRegion') svgRegion: ElementRef;\n    // @ViewChild(PromotionComponent) promotion: PromotionComponent;\n    // private tempPiece: PieceType;\n\n    // For piece promotion\n    // public promSquaresMap = new Map<string, ChessSquare>();\n    public showProm = false;\n    public promPieceSelected = new EventEmitter<PieceType>();\n    // private promPieceSubject: Subscription;\n\n    constructor(private cd: ChangeDetectorRef) {\n        this.calculateSizes();\n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                const coord = files[i]\n                    + (j + 1).toString();\n                const cs = new ChessSquare(coord, this);\n                cs.init();\n                this.squaresMap.set(coord, cs);\n            }\n        }\n        // https://github.com/jhlywa/chess.js\n        this.chess = new Chess();\n        this.chess.onChange.subscribe(() => {\n            this.positionPieces();\n        });\n\n        // For promotion dialog\n        // const promotionSquares = ['a8', 'a7', 'a6', 'a5'];\n        // for (let coord of promotionSquares) {\n        //     const cs = new ChessSquare(coord, this);\n        //     cs.init();\n        //     this.promSquaresMap.set(coord, cs);\n        // }\n\n    }\n\n    async ngAfterViewInit() {\n        // The ViewChild component is available now\n    }\n\n    async getPromotionPiece(square: ChessSquare): Promise<PieceType> {\n        let p = new Promise<PieceType>((resolve) => {\n            // console.log(\"getPromotionPiece\");\n            this.showProm = true;\n            this.showPromotionChoices(this.squaresMap.get(square.coordinate));\n            let promPieceSubject = this.promPieceSelected.subscribe((pt: PieceType) => {\n                // console.log(\"showPromotionDialog: \"\n                //     + pt);\n                resolve(pt);\n                promPieceSubject.unsubscribe();\n            });\n\n        });\n        return p;\n    }\n\n    showPromotionChoices(promSquare: ChessSquare) {\n        // console.log(\"showPromotionChoices\");\n        let useSquares: string[];\n        let boardSide: Colour;\n        let file = promSquare.coordinate.substr(0, 1);\n        if (promSquare.coordinate.endsWith('8')) {\n            boardSide = Colour.WHITE;\n            useSquares = [file + 8, file + 7, file + 6, file + 5];\n        }\n        else {\n            boardSide = Colour.BLACK;\n            useSquares = [file + 1, file + 2, file + 3, file + 4];\n        }\n\n        this.squaresMap.get(useSquares[0]).pieceColour = boardSide;\n        this.squaresMap.get(useSquares[0]).pieceType = PieceType.QUEEN;\n        this.squaresMap.get(useSquares[1]).pieceColour = boardSide;\n        this.squaresMap.get(useSquares[1]).pieceType = PieceType.ROOK;\n        this.squaresMap.get(useSquares[2]).pieceColour = boardSide;\n        this.squaresMap.get(useSquares[2]).pieceType = PieceType.BISHOP;\n        this.squaresMap.get(useSquares[3]).pieceColour = boardSide;\n        this.squaresMap.get(useSquares[3]).pieceType = PieceType.KNIGHT;\n\n        for (let i = 0; i < 8; i++) {\n            for (let j = 0; j < 8; j++) {\n                const coord = files[i]\n                    + (j + 1).toString();\n                if (!useSquares.includes(coord)) {\n                    this.squaresMap.get(coord).removePiece();\n                }\n            }\n        }\n    }\n\n    get viewBox(): string {\n        return '0 0 '\n            + (this.wholeSize).toString()\n            + ' ' + (this.wholeSize).toString();\n\n    }\n\n\n    // this is needed in the component because the template\n    // needs it to calculate the total svg size of the area.\n    public squareSize: number;\n    public wholeSize: number;\n\n    public resize = new EventEmitter<void>();\n    public flipBoard() {\n        this.boardSide === Colour.WHITE ? this.boardSide = Colour.BLACK\n            : this.boardSide = Colour.WHITE;\n        this.flip();\n    }\n\n    private flip() {\n        this.squaresMap.forEach((cs: ChessSquare, key: string) => {\n            cs.calculateRowColumn();\n            this.positionPieces();\n        });\n    }\n\n    public flipBoardTo(colour: Colour) {\n        this.boardSide = colour;\n        this.flip();\n    }\n\n    public load(fen: string = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1') {\n        const r: FenValidationResult = this.chess.validate_fen(fen);\n        if (!r.valid) {\n            throw new Error('Error: Invalid Fen. Fen=\\'' + fen\n                + '\\', error=' + r.error);\n        }\n        // console.log('fen is valid');\n        this.chess.load(fen);\n        // Set board pieces to be the same\n        this.positionPieces();\n\n        // Reminder of how to iterate through a Map:\n        // this.squaresMap.forEach((cs: ChessSquare, key: string) => {\n        // });\n    }\n\n    // Puts the pieces on the board in line with the chess position\n    public positionPieces() {\n        // console.log(\"positionPieces called\");\n        for (const key of Object.keys(this.chess.SQUARES)) {\n            const coord: string = key;\n            const index: number = this.chess.SQUARES[key];\n            const piece: ChessPiece = this.chess.board[index];\n            const cs = this.squaresMap.get(coord);\n            // console.log(\"coord: \" + coord\n            // + \", index: \" + index\n            // );\n            if ((typeof piece) !== 'undefined'\n                && piece !== undefined) {\n                // console.log(\"piece: \" + piece.type\n                // + \", piece colour: \" + piece.color);\n                // if (cs.pieceColour != piece.color\n                //  || cs.pieceType != piece.type) {\n                cs.pieceColour = piece.color;\n                cs.pieceType = piece.type;\n                // }\n\n            } else {\n                // console.log(\"empty square\");\n                cs.removePiece();\n            }\n\n        }\n    }\n\n    ngOnInit() {\n        window.addEventListener('resize', ($event) => {\n            this.calculateSizes();\n        });\n\n    } // end of ngOnInit\n\n    private calculateSizes() {\n        if (window.innerHeight > window.innerWidth) {\n            this.wholeSize = 280;\n        } else {\n            this.wholeSize = 400;\n        }\n        this.squareSize = this.wholeSize / 8;\n        this.resize.emit();\n    }\n\n    mouseMove(event: MouseEvent) {\n        this.mouseMoveLocal.emit(event);\n    }\n\n    touchMove(event: TouchEvent) {\n        event.preventDefault();\n        this.touchMoveLocal.emit(event);\n    }\n\n    touchEnd(event: TouchEvent) {\n\n        if (this.movingByDrag) {\n            event.preventDefault();\n            let t: Touch;\n            if (event.targetTouches.length > 0)\n                t = event.targetTouches[0];\n            else\n                t = event.changedTouches[0];\n            console.log(\"touchEnd ended at \"\n                + Math.round(t.clientX)\n                + \",\" + Math.round(t.clientY));\n            this.endMoveByDrag(t.clientX, t.clientY);\n\n        }\n        this.touchEndLocal.emit(event);\n    }\n\n    mouseUp(event: MouseEvent) {\n        if (this.movingByDrag) {\n            this.endMoveByDrag(event.clientX, event.clientY);\n\n        }\n        this.mouseUpLocal.emit(event);\n    }\n\n    endMoveByDrag(clientX: number, clientY: number) {\n        let boardClientX = this.svgRegion.nativeElement.getBoundingClientRect().left;\n        let boardClientY = this.svgRegion.nativeElement.getBoundingClientRect().top;\n        // console.log('board x: ' + boardClientX + ', board y: ' + boardClientY);\n        let mouseClientX = clientX;\n        let mouseClientY = clientY;\n        let column =\n            files[Math.floor((mouseClientX - boardClientX) / this.squareSize)];\n        let row = 8 - Math.floor((mouseClientY - boardClientY) / this.squareSize);\n        // console.log('row: ' + row);\n        if (this.boardSide === Colour.BLACK) {\n            const columnNumber = 7 - files.indexOf(column);\n            column = files[columnNumber];\n            row = 9 - row;\n        }\n\n        const coord = column + row.toString();\n        // check whether no move was actually made\n        if (this.movingFromByDrag.coordinate === coord) {\n            // If there's a piece on the square\n            if (this.movingFromByDrag.pieceType !== undefined) {\n                this.movingFromByDrag.pieceClicked();\n            }\n            return;\n        }\n        // console.log(\"endMove calling makeMoveTo\");\n        this.movingByDrag = false;\n        this.makeMoveTo(this.movingFromByDrag,\n            this.squaresMap.get(coord));\n\n\n    }\n\n    public endMoveByClick(toSquare: ChessSquare) {\n        this.movingByClick = false;\n        this.makeMoveTo(this.movingFromByClick, toSquare);\n    }\n\n    public makeMoveTo(fromSquare: ChessSquare, toSquare: ChessSquare) {\n        // check if it needs a pawn promotion\n        let isPromotion = false;\n        if (fromSquare.pieceType === PieceType.PAWN) {\n            if (\n                (fromSquare.pieceColour === Colour.WHITE\n                    && toSquare.coordinate.substr(1, 1) === '8')\n                ||\n                (fromSquare.pieceColour === Colour.BLACK\n                    && toSquare.coordinate.substr(1, 1) === '1')\n            ) {\n                isPromotion = true;\n            }\n        }\n        if (isPromotion) {\n            // console.log(\"makeMoveTo: pawn promotion\");\n            this.getPromotionPiece(toSquare).then((pieceType) => {\n                // console.log(\"makeMoveTo: piece chosen: \" + pieceType);\n                // check whether the move is valid\n                const move = new Move(fromSquare.coordinate,\n                    toSquare.coordinate, pieceType);\n                const chessMove = this.chess.move(move);\n                if (chessMove === undefined) {\n                    this.positionPieces();\n                    console.log('invalid move');\n                } else { // valid move\n                    this.moveMade.emit(move);\n                }\n            });\n\n        }\n        else {\n\n            // check whether the move is valid\n            const move = new Move(fromSquare.coordinate,\n                toSquare.coordinate);\n            const chessMove = this.chess.move(move);\n            if (chessMove === undefined) {\n                this.positionPieces();\n                console.log('invalid move');\n            } else { // valid move\n                this.moveMade.emit(move);\n            }\n        }\n    }\n\n\n} // End of class ChessBoardComponent\n\n","export class SvgPath {\n    public transform = '';\n    public origD: string;\n    constructor(public d: string, public className: string) {\n        this.origD = d;\n    }\n}\n\nexport class SvgCircle {\n    public origCx: number;\n    public origCy: number;\n    constructor(public cx: number,\n        public cy: number,\n        public r: number,\n        public className: string) {\n            this.origCx = cx;\n            this.origCy = cy;\n    }\n}\n\n// This class holds svg data in a form that can be accessed\n// from an Angular template\nexport class SvgData {\n    public paths: Array<SvgPath> = new Array<SvgPath>();\n    public circles: Array<SvgCircle> = new Array<SvgCircle>();\n}\n\n// This class holds the svg data for each chess piece\nexport class SvgPieces {\n    static get blackPawn(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z',\n            'black-piece black-body'));\n        return ret;\n    }\n\n    static get whitePawn(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z',\n            'white-piece'));\n        return ret;\n    }\n\n    static get blackKing(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 22.5,11.63 L 22.5,6 ',\n            'black-piece'));\n\n        ret.paths.push(new SvgPath('M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25 ',\n            'black-body'));\n\n        ret.paths.push(new SvgPath('M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z',\n            'black-body'));\n\n        ret.paths.push(new SvgPath('M 20,8 L 25,8 ',\n            'black-piece'));\n\n        ret.paths.push(new SvgPath('M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.51,26.6 L 22.5,24.5 C 20,18 9.906,14 6.997,19.85 C 4.5,25.5 11.85,28.85 11.85,28.85 ',\n            'black-piece white-line'));\n\n        ret.paths.push(new SvgPath('M 11.5,30 C 17,27 27,27 32.5,30 M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5 M 11.5,37 C 17,34 27,34 32.5,37 ',\n            'black-piece white-line'));\n        return ret;\n    }\n\n\n    static get whiteKing(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 22.5,11.63 L 22.5,6 ',\n            'white-piece'));\n\n        ret.paths.push(new SvgPath('M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25 ',\n            'white-body'));\n\n        ret.paths.push(new SvgPath('M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z',\n            'white-piece'));\n        // part of cross:\n        ret.paths.push(new SvgPath('M 20,8 L 25,8 ',\n            'white-piece'));\n\n        ret.paths.push(new SvgPath('M 11.5,30 C 17,27 27,27 32.5,30 M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5 M 11.5,37 C 17,34 27,34 32.5,37 ',\n            'white-piece black-line'));\n        return ret;\n    }\n\n    static get blackQueen(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 11,38.5 A 35,35 1 0 0 34,38.5 ',\n            'black-piece'));\n        ret.paths.push(new SvgPath('M 11,29 A 35,35 1 0 1 34,29 ',\n            'black-piece  white-line'));\n        ret.paths.push(new SvgPath('M 12.5,31.5 L 32.5,31.5 ',\n            'black-piece  white-line'));\n        ret.paths.push(new SvgPath('M 11.5,34.5 A 35,35 1 0 0 33.5,34.5 ',\n            'black-piece  white-line'));\n        ret.paths.push(new SvgPath('M 10.5,37.5 A 35,35 1 0 0 34.5,37.5 ',\n            'black-piece  white-line'));\n        ret.circles.push(new SvgCircle(6, 12, 2.75, 'black-piece'));\n        ret.circles.push(new SvgCircle(14, 9, 2.75, 'black-piece'));\n        ret.circles.push(new SvgCircle(22.5, 8, 2.75, 'black-piece'));\n        ret.circles.push(new SvgCircle(31, 9, 2.75, 'black-piece'));\n        ret.circles.push(new SvgCircle(39, 12, 2.75, 'black-piece'));\n        return ret;\n    }\n\n    static get whiteQueen(): SvgData {\n        const ret = new SvgData();\n\n        ret.paths.push(new SvgPath('M 9,26 C 17.5,24.5 30,24.5 36,26 L 38,14 L 31,25 L 31,11 L 25.5,24.5 L 22.5,9.5 L 19.5,24.5 L 14,10.5 L 14,25 L 7,14 L 9,26 z',\n            'white-body'));\n\n        ret.paths.push(new SvgPath('M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z ',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 11.5,30 C 15,29 30,29 33.5,30 ',\n            'white-piece'));\n        ret.paths.push(new SvgPath('M 12,33.5 C 18,32.5 27,32.5 33,33.5 ',\n            'white-piece  black-line'));\n\n        let sp = new SvgPath('M 9,13 A 2,2 0 1 1 5,13 A 2,2 0 1 1 9,13 z',\n            'white-piece');\n        sp.transform = 'translate(-1,-1)';\n        ret.paths.push(sp);\n        sp = new SvgPath('M 9,13 A 2,2 0 1 1 5,13 A 2,2 0 1 1 9,13 z',\n            'white-piece');\n        sp.transform = 'translate(15.5,-5.5)';\n        ret.paths.push(sp);\n        sp = new SvgPath('M 9,13 A 2,2 0 1 1 5,13 A 2,2 0 1 1 9,13 z',\n            'white-piece');\n        sp.transform = 'translate(32,-1)';\n        ret.paths.push(sp);\n        sp = new SvgPath('M 9,13 A 2,2 0 1 1 5,13 A 2,2 0 1 1 9,13 z',\n            'white-piece');\n        sp.transform = 'translate(7,-4.5)';\n        ret.paths.push(sp);\n        sp = new SvgPath('M 9,13 A 2,2 0 1 1 5,13 A 2,2 0 1 1 9,13 z',\n            'white-piece');\n        sp.transform = 'translate(24,-4)';\n        ret.paths.push(sp);\n        return ret;\n    }\n\n    static get blackRook(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 12,35.5 L 33,35.5 L 33,35.5 ',\n            'black-piece  white-line'));\n        ret.paths.push(new SvgPath('M 13,31.5 L 32,31.5 ',\n            'black-piece  white-line'));\n        ret.paths.push(new SvgPath('M 14,29.5 L 31,29.5 ',\n            'black-piece  white-line'));\n        ret.paths.push(new SvgPath('M 14,16.5 L 31,16.5 ',\n            'black-piece  white-line'));\n        ret.paths.push(new SvgPath('M 11,14 L 34,14 ',\n            'black-piece  white-line'));\n\n        return ret;\n    }\n\n    static get whiteRook(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 ',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 34,14 L 31,17 L 14,17 L 11,14 ',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 31,17 L 31,29.5 L 14,29.5 L 14,17 ',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 31,29.5 L 32.5,32 L 12.5,32 L 14,29.5 ',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 11,14 L 34,14 ',\n            'white-piece  black-line'));\n\n        return ret;\n    }\n\n    static get blackBishop(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 25,8 A 2.5,2.5 0 1 1 20,8 A 2.5,2.5 0 1 1 25,8 z',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18 ',\n            'black-piece  white-line'));\n\n\n        return ret;\n    }\n\n    static get whiteBishop(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z',\n            'white-body'));\n        // top circle:\n        ret.paths.push(new SvgPath('M 25,8 A 2.5,2.5 0 1 1  20,8 A 2.5,2.5 0 1 1  25,8 z',\n            'white-body'));\n        // middle cross and line:\n        ret.paths.push(new SvgPath('M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18 ',\n            'white-piece  black-line'));\n\n\n        return ret;\n    }\n\n    static get blackKnight(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18 ',\n            'black-body'));\n        ret.paths.push(new SvgPath('M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10 ',\n            'black-body'));\n        // nostril:\n        ret.paths.push(new SvgPath('M 9.5,25.5 A 0.5,0.5 0 1 1 8.5,25.5 A 0.5,0.5 0 1 1 9.5,25.5 z',\n            'black-piece  white-line'));\n        // eye:\n        const eye = new SvgPath('M 13.5,15 A 0.5,0.9 0 1 1 13,16 A 0.5,1.5 0 1 1 14,16 z',\n            'white-line');\n        ret.paths.push(eye);\n        // mane:\n        ret.paths.push(new SvgPath('M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z',\n            'white-line-inner'));\n\n\n        return ret;\n    }\n\n    static get whiteKnight(): SvgData {\n        const ret = new SvgData();\n        ret.paths.push(new SvgPath('M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18 ',\n            'white-body'));\n        ret.paths.push(new SvgPath('M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10 ',\n            'white-body'));\n        // nostril:\n        ret.paths.push(new SvgPath('M 9.5,25.5 A 0.5,0.5 0 1 1 8.5,25.5 A 0.5,0.5 0 1 1 9.5,25.5 z',\n            'white-piece  black-line'));\n        // eye:\n        const eye = new SvgPath('M 13.5,15 A 0.5,0.9 0 1 1 13,16 A 0.5,1.5 0 1 1 14,16 z',\n            'black-line');\n        ret.paths.push(eye);\n\n        return ret;\n    }\n}\n","module.exports = \".g-signin2 {\\n    float: right;\\n  }\\n\\n  .sign-out {\\n    background-color: #4285f4;\\n    color: white;\\n    float: right;\\n    font-size: 19px;\\n  \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtHQUNkOztFQUVEO0lBQ0UsMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixhQUFhO0lBQ2IsZ0JBQWdCOztHQUVqQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5nLXNpZ25pbjIge1xuICAgIGZsb2F0OiByaWdodDtcbiAgfVxuXG4gIC5zaWduLW91dCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQyODVmNDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGZvbnQtc2l6ZTogMTlweDtcbiAgXG4gIH0iXX0= */\"","module.exports = \"<h1><a routerLink=''>\\n        Chess Opening Trainer</a></h1>\\n\\n<div >\\n    <button class=\\\"sign-out\\\" matTooltip=\\\"Sign out\\\" (click)=\\\"signOut()\\\" *ngIf=\\\"isSignedIn\\\">Sign out\\n    </button>\\n</div>\\n<div [style.display]=\\\"googleDisplay\\\">\\n    <div class=\\\"g-signin2\\\" data-onsuccess=\\\"onSignIn\\\" data-theme=\\\"dark\\\">\\n    </div>\\n</div>\\n<nav>\\n    <a routerLink=\\\"/trainer\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"Practice sequences\\\">\\n        Trainer</a>\\n    <a routerLink=\\\"/sequences\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"View sequences\\\">\\n        Sequences</a>\\n    <a routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">\\n        About</a>\\n    <a routerLink=\\\"/builder\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"Prepare new sequences\\\">\\n        Builder</a>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component, ChangeDetectorRef, OnInit } from '@angular/core';\nimport { GoogleAuthService } from '../services/google-auth.service';\nimport { DataService } from '../services/data.service';\n\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n    public isSignedIn: boolean = true;\n    public googleDisplay = \"block\";\n\n    constructor(public gdata: GoogleAuthService,\n        private cd: ChangeDetectorRef,\n        // This causes the data to be loaded earlier on\n        public dataService: DataService) {\n        window.onSignIn = (googleUser) => this.onSignIn(googleUser);\n    }\n\n    onSignIn(googleUser) {\n        this.gdata.onSignIn(googleUser);\n        // this.isSignedIn = this.gdata.isSignedIn;\n        this.googleDisplay = this.gdata.googleDisplay;\n        this.cd.detectChanges();\n      }\n    \n      public async signOut() {\n        console.log(\"calling gdata signout...\");\n        await this.gdata.signOut();\n        console.log(\"gdata signout finished\");\n        // this.isSignedIn = this.gdata.isSignedIn;\n        this.googleDisplay = this.gdata.googleDisplay;\n        this.cd.detectChanges();\n      }\n    \n      ngOnInit() { }\n\n} // End of class HeaderComponent\n","import { Component } from '@angular/core';\n\n@Component({\n  template: '<h2>Page not found</h2>'\n})\nexport class PageNotFoundComponent {}\n\n\n/*\nCopyright 2017-2018 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {SequencesComponent } from './sequences.component';\n\nconst routes: Routes = [\n  { path: 'sequences', component: SequencesComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class SequencesRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcXVlbmNlcy9zZXF1ZW5jZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br>\\n<p>The sequences you can practice are listed below.</p>\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"table\\\">\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let sequence\\\"> {{sequence.name}} </td>\\n    </ng-container>\\n\\n    <!-- Practice Column -->\\n    <ng-container matColumnDef=\\\"practice\\\">\\n        <th mat-header-cell *matHeaderCellDef> </th>\\n        <td mat-cell *matCellDef=\\\"let sequence\\\">\\n            <!-- <button type=\\\"button\\\" \\n            (click)=\\\"practice(sequence)\\\">Practice</button> -->\\n            <a class=\\\"btn btn-secondary btn-sm active\\\" role=\\\"button\\\" aria-pressed=\\\"true\\\" routerLink=\\\"/trainer/{{ sequence.name }}\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"Practice sequence\\\">\\n                Practice</a>\\n        </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (dblclick)=\\\"dblclick()\\\"></tr>\\n</table>\"","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { Sequence} from '../shared-classes/sequence';\nimport { MatTable } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-sequences',\n    templateUrl: './sequences.component.html',\n    styleUrls: ['./sequences.component.css']\n})\nexport class SequencesComponent implements OnInit {\n    public dataSource: DataService;\n    displayedColumns: string[] = ['name', 'practice'];\n    @ViewChild(MatTable) table: MatTable<any>;\n\n    constructor(public dataService: DataService, private router: Router) {\n        \n    }\n\n    ngOnInit() {\n        this.dataSource = this.dataService;\n    }\n\n    practice(seq: Sequence): void {\n        console.log('practice sequence ' + seq.name + '...');\n        this.router.navigate(['/trainer',\n        //{name: seq.name, header: 'showHeader'}]);\n        {name: seq.name}]);\n    }\n    \n\n\n} // End of class SequencesComponent\n","import { Injectable } from '@angular/core';\nimport * as alasql from 'alasql';\n\n// Wrapper around alasql\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AlaSql {\n\n\tpublic async exec(sql: string) {\n\t\tlet p = new Promise<string>(async (resolve) => {\n\t\t\t// console.log('Sql: ' + sql);\n\t\t\talasql.promise(sql)\n\t\t\t\t.then((res) => {\n\t\t\t\t\t// console.log('Result: ' + JSON.stringify(res));\n\t\t\t\t\tresolve(res);\n\t\t\t\t});\n\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async execSelect(sql: string): Promise<Object[]> {\n\t\tlet p = new Promise<Object[]>(async (resolve) => {\n\t\t\t// console.log('Sql: ' + sql);\n\t\t\talasql.promise(sql)\n\t\t\t\t.then((res) => {\n\t\t\t\t\t// console.log('Result: ' + JSON.stringify(res));\n\t\t\t\t\tresolve(res);\n\t\t\t\t});\n\n\t\t});\n\t\treturn p;\n\t}\n\n\t// Create a table from a Json object.\n\t// This is the form that alasql uses natively, so this\n\t// should be more efficient than repeating insert into calls.\n\tpublic async createTable(tableName: string, data: Object[]) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tlet sql = 'create table ' + tableName;\n\t\t\t// Empty data\n\t\t\tif (data.length < 1) {\n\t\t\t\tthrow new Error('Error - createTable called without even column headings.');\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Set column headings\n\t\t\tsql += \" (\";\n\t\t\tlet isFirst = true;\n\t\t\tfor (let i = 0; i < Object.keys(data[0]).length; i++) {\n\t\t\t\tif (isFirst) \n\t\t\t\t\tisFirst = false;\n\t\t\t\telse\n\t\t\t\t\tsql += \", \";\n\t\t\t\tsql += Object.keys(data[0])[i];\n\t\t\t}\n\t\t\tsql += \")\";\n\t\t\t// console.log(\"createTable sql: \" + sql);\n\t\t\t// Create the table\n\t\t\talasql.promise(sql).then((res) => {\n\t\t\t\t// If there's data then add it in\n\t\t\t\t// console.log(\"data: \" + JSON.stringify(data));\n\t\t\t\t// console.log(\"createTable data[0]: \" \n\t\t\t\t// + JSON.stringify(data[0]));\n\t\t\t\t// console.log(\"Object.values(data[0])[0]\" + Object.values(data[0])[0]);\n\t\t\t\t// console.log(\"createTable data.length: \" + data.length);\n\t\t\t\tif (data.length > 0 && Object.values(data[0])[0] !== \"\") {\n\t\t\t\t\tlet a = <any>alasql;\n\t\t\t\t\tfor (let i = 0; i < Object.keys(a.tables).length; i++) {\n\t\t\t\t\t\tif (Object.keys(a.tables)[i] === tableName) {\n\t\t\t\t\t\t\tlet table = <any>Object.values(a.tables)[i];\n\t\t\t\t\t\t\ttable.data = data;\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t// console.log('data1: ' + JSON.stringify(table));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t\treturn p;\n\t}\n\n\t// Returns (presumably by reference) the data used by alasql.\n\t// As it should just return an existing reference, it isn't async.\n\tpublic rawData(tableName: string): Object[] {\n\t\tlet a = <any>alasql;\n\t\tfor (let i = 0; i < Object.keys(a.tables).length; i++) {\n\t\t\tif (Object.keys(a.tables)[i] === tableName) {\n\t\t\t\tlet table = <any>Object.values(a.tables)[i];\n\t\t\t\treturn table.data;\n\t\t\t}\n\t\t}\n\t\tthrow new Error('rawData called for invalid tablename ' + tableName);\n\t}\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Sequence } from '../shared-classes/sequence';\nimport { GoogleAuthService } from './google-auth.service';\nimport { Observable, BehaviorSubject, from, Subject } from 'rxjs';\nimport { CollectionViewer, DataSource } from \"@angular/cdk/collections\";\nimport { Spreadsheet } from './spreadsheet';\nimport { RecordService } from './record.service';\nimport { AlaSql } from './alasql.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DataService implements DataSource<Sequence> {\n\n\t// public records = new Array<Record>();\n\tpublic sequencesLoaded = new Array<Promise<void>>();\n\tpublic sequencies = new Array<Sequence>();\n\tprivate subject = new BehaviorSubject<Sequence[]>(null);\n\tpublic spreadsheet: Spreadsheet;\n\n\tconstructor(public gauth: GoogleAuthService,\n\t\tpublic ala: AlaSql,\n\t\tprivate recordService: RecordService) {\n\t\tthis.sequencesLoaded.push(this.loadSequences());\n\t}\n\n\tpublic async loadSequences(): Promise<void> {\n\t\tlet p = new Promise<void>((resolve) => {\n\t\t\tthis.addBasicSequencies();\n\t\t\tthis.subject.next(this.sequencies);\n\t\t\tPromise.all(this.gauth.ready).then(async () => {\n\t\t\t\tconsole.log(\"Google ready\");\n\t\t\t\tawait this.retrieveSequences();\n\t\t\t\tthis.subject.next(this.sequencies);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t\treturn p;\n\t}\n\n\n\tprivate addBasicSequencies() {\n\t\tlet name, fen, moves;\n\t\tname = 'Sicilian Dragon Initial';\n\t\tfen = 'rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1';\n\t\tmoves = 'c7c5,g1f3,d7d6,d2d4,c5d4,f3d4,g8f6,b1c3,g7g6,c1e3,f8g7,f2f3,b8c6,d1d2,e8g8,f1c4,c8d7,e1c1,c6e5,c4b3';\n\t\tthis.addSequence(name, fen, moves);\n\t\tname = 'Sicilian Dragon Bishop Advance';\n\t\tfen = 'r2q1rk1/pp1bppbp/3p1np1/4n3/3NP3/1BN1BP2/PPPQ2PP/2KR3R b - - 8 11';\n\t\tmoves = 'a8c8,e3h6,g7h6,d2h6,c8c3,b2c3,a7a5,a2a4,d8c7,h6e3,c7c5,c1d2,d7a4,d1a1,a4b3,c2b3,d6d5';\n\t\tthis.addSequence(name, fen, moves);\n\t\tname = 'Semi-Slav Be7';\n\t\tfen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\t\tmoves = 'd2d4,d7d5,g1f3,g8f6,c2c4,c7c6,b1c3,e7e6,c1g5,f8e7,e2e3,e8g8,d1c2,b8d7,e1c1,f8e8,c1b1,a7a6,h2h4,b7b5,c4c5,b5b4,c3a4,a6a5,g5f6,e7f6,f3g5,d7f8,f1d3,g7g6,a4b6,a8a7,b6c8,d8c8,f2f4,a5a4,c2f2';\n\t\tthis.addSequence(name, fen, moves);\n\t\tname = 'Semi-Slav Cambridge Springs';\n\t\tfen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\t\tmoves = 'd2d4,d7d5,g1f3,c7c6,c2c4,g8f6,b1c3,e7e6,c1g5,b8d7,d1c2,d8a5,g5d2,a5d8,e2e4';\n\t\tthis.addSequence(name, fen, moves);\n\t\tname = 'Lucena Position';\n\t\tfen = '1K6/1P1k4/8/8/8/8/2R5/r7 w - - 0 1';\n\t\tmoves = 'c2d2,d7e7,d2d4,a1c1,b8a7,c1a1,a7b6,a1b1,b6c6,b1c1,c6b5,c1b1,d4b4';\n\t\tthis.addSequence(name, fen, moves);\n\t\tname = 'Lucena Position Variation';\n\t\tfen = '1K6/1P1k4/8/8/8/8/2R5/r7 w - - 0 1';\n\t\tmoves = 'c2d2,d7e6,b8c8,a1c1,c8d8,c1b1,d2d7,e6e5,d8c8';\n\t\tthis.addSequence(name, fen, moves);\n\t}\n\n\tpublic async findSequence(name: string, wait: boolean = true): Promise<Sequence> {\n\t\tlet p = new Promise<Sequence>((resolve) => {\n\t\t\tfor (const seq of this.sequencies) {\n\t\t\t\tif (seq.name === name) {\n\t\t\t\t\tresolve(seq);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// wait for google auth\n\t\t\tif (wait) {\n\t\t\t\tPromise.all(this.sequencesLoaded).then(async () => {\n\t\t\t\t\tlet seq = await this.findSequence(name, false);\n\t\t\t\t\tresolve(this.findSequence(name, false));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn p;\n\n\t}\n\n\tprivate addSequence(name: string, fen: string, moves: string) {\n\t\tconst seq = new Sequence();\n\t\tseq.name = name;\n\t\tseq.fen = fen;\n\t\tconst parts = moves.split(',');\n\t\tfor (let i = 0; i < parts.length; i++) {\n\t\t\tseq.addStep(parts[i], '');\n\t\t}\n\t\tthis.sequencies.push(seq);\n\t}\n\n\t// Get sequences from a Google spreadsheet.\n\t// Needs to be in /etc/chess-opening-trainer\n\tprivate async retrieveSequences() {\n\t\tconst p = new Promise<void>((resolve) => {\n\t\t\tlet q = \"name contains 'Chess Opening Trainer' and mimeType contains 'google-apps.spreadsheet'\";\n\t\t\tlet list = gapi.client.drive.files.list(\n\t\t\t\t{ q: q }\n\t\t\t);\n\t\t\tlist.execute((resp) => {\n\t\t\t\tif (resp.files.length === 0) {\n\t\t\t\t\tthrow new Error('No Google Docs spreadsheet Chess Opening Trainer found');\n\t\t\t\t}\n\t\t\t\tthis.spreadsheet = new Spreadsheet(resp.files[0].id,\n\t\t\t\t\tthis.gauth, this.ala);\n\t\t\t\tgapi.client.sheets.spreadsheets.values.get({\n\t\t\t\t\tspreadsheetId: this.spreadsheet.id,\n\t\t\t\t\trange: \"Sequences!A2:C\"\n\t\t\t\t}).then((response) => {\n\t\t\t\t\tfor (let i = 0; i < response.result.values.length; i++) {\n\t\t\t\t\t\tthis.addSequence(response.result.values[i][0],\n\t\t\t\t\t\t\tresponse.result.values[i][1], response.result.values[i][2]);\n\t\t\t\t\t}\n\t\t\t\t\tresolve();\n\t\t\t\t}, (error) => {\n\t\t\t\t\tthrow new Error(error.result.error.message);\n\t\t\t\t});\n\t\t\t\tthis.addRecords();\n\t\t\t});\n\t\t});\n\t\treturn p;\n\t}\n\n\n\tconnect(collectionViewer: CollectionViewer): Observable<Sequence[]> {\n\t\treturn this.subject.asObservable();\n\t}\n\n\tdisconnect(collectionViewer: CollectionViewer): void {\n\t\tthis.subject.complete();\n\t}\n\n\tasync addRecords(): Promise<void> {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { JsLoaderService } from './js-loader.service';\n\ndeclare global {\n    var gapi;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GoogleAuthService {\n    public javascriptFile = 'https://apis.google.com/js/platform.js';\n    // public isSignedIn = false;\n    public googleDisplay = 'block';\n    public googleUser: any;\n    public ready = new Array<Promise<void>>();\n    private readyResolve: (value?: void | PromiseLike<void>) => void;\n    \n\n    constructor(public loader: JsLoaderService) {\n\n        console.log('Loading the javascript API file.');\n        this.ready.push(this.loader.loadjs(this.javascriptFile).then(() => {\n            // file loaded\n        }));\n\n        this.ready.push(new Promise<void>((resolve) => {\n            this.readyResolve = resolve;\n        }));\n        \n    }\n\n    public async onSignIn(googleUser) {\n        this.googleUser = googleUser;\n        console.log('Signed in');\n        // this.isSignedIn = true;\n        this.googleDisplay = 'none';\n        await this.loadClient();\n        await this.loadSheetsAPI();\n        await this.loadDriveAPI();\n        this.readyResolve();\n    }\n\n    public async signOut() {\n        console.log('Signing out.');\n        const auth2 = gapi.auth2.getAuthInstance();\n        await auth2.signOut().then(() => {\n            console.log('signed out');\n            // this.isSignedIn = false;\n            this.googleDisplay = 'block';\n            this.ready.push(new Promise<void>((resolve) => {\n                this.readyResolve = resolve;\n            }));\n        });\n    }\n\n    public async loadClient(): Promise<void> {\n        const p = new Promise<void>((resolve) => {\n            gapi.load('client', () => {\n                console.log(\"client loaded\");\n                resolve();\n            },\n                (error) => {\n                    console.log('Error loading client: '\n                        + JSON.stringify(error));\n                });\n        });\n        return p;\n    }\n\n    public async loadSheetsAPI() {\n        const p = new Promise<void>((resolve) => {\n            gapi.client.load(\n                'https://sheets.googleapis.com/$discovery/rest?version=v4')\n                .then(() => {\n                    console.log(\"sheets v4 loaded\");\n                    resolve();\n                },\n                    (error) => {\n                        console.log('Error loading SheetsAPI: '\n                            + JSON.stringify(error));\n                    });\n        });\n        return p;\n    }\n\n    public async loadDriveAPI() {\n        let p = new Promise<void>((resolve) => {\n            gapi.client.load(\n                'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest')\n                .then(() => {\n                    console.log(\"drive v3 loaded\");\n                    resolve();\n                },\n                    (error) => {\n                        console.log(\"Error loading DriveAPI: \"\n                            + JSON.stringify(error));\n                    });\n        });\n        return p;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsLoaderService {\n\n  constructor() { }\n\n  loadjs(url: string): Promise<void> {\n    const p = new Promise<void>((resolve) => {\n      const node = document.createElement('script');\n      node.src = url;\n      node.type = 'text/javascript';\n      node.charset = 'utf-8';\n      document.getElementsByTagName('head')[0]\n        .appendChild(node);\n      node.onload = () => {\n        console.log(`The javascript file ${url} has been loaded.`);\n        resolve();\n      };\n    });\n\n    return p;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AlaSql } from './alasql.service';\nimport { SpreadsheetService } from './spreadsheet.service';\nimport { Spreadsheet } from './spreadsheet';\nimport { Record } from '../shared-classes/record';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RecordService {\n\n\tprivate spreadsheetName = 'Chess Opening Trainer';\n\tprivate tableName = 't_records';\n\tprivate columns = ['name', 'lastSuccess', 'next', 'lastFail'];\n\tpublic ready = new Array<Promise<void>>();\n\tprivate spreadsheet: Spreadsheet;\n\n\tconstructor(public spreadsheetService: SpreadsheetService,\n\t\tpublic ala: AlaSql) {\n\t\tthis.ready.push(new Promise<void>((resolve) => {\n\t\t\tthis.retrieveRecords().then(() => {\n\t\t\t\t// Records on previous attempts have been retrieved from\n\t\t\t\t// the spreadsheet\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}));\n\n\t}\n\n\tprivate async retrieveRecords() {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tthis.spreadsheet = await this.spreadsheetService.getSpreadsheet(\n\t\t\t\tthis.spreadsheetName\n\t\t\t);\n\t\t\tlet exists = await this.spreadsheet.sheetExists(this.tableName);\n\t\t\tif (!exists) {\n\t\t\t\tconsole.log('t_records table being created...');\n\t\t\t\tlet tableData = await this.spreadsheet.arrayToJson([this.columns]);\n\t\t\t\tawait this.ala.createTable(this.tableName, tableData);\n\t\t\t\tawait this.spreadsheet.writeTable(this.tableName);\n\t\t\t\tawait this.spreadsheet.setBold(this.tableName + '!A1:D1');\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Create the table anyway just in case the sheet\n\t\t\t\t// has become blank for some reason.\n\t\t\t\tlet tableData =\n\t\t\t\t\tawait this.spreadsheet.arrayToJson([this.columns]);\n\t\t\t\tawait this.ala.createTable(this.tableName, tableData);\n\t\t\t\t// Pull in any data from the spreadsheet\n\t\t\t\tawait this.spreadsheet.readTable(this.tableName);\n\t\t\t\tlet records = await this.ala.execSelect(\"select * from t_records\");\n\t\t\t\t// console.log(\"retrieved records: \" + JSON.stringify(records));\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\treturn p;\n\t}\n\n\t// finds a record from the records table\n\tasync getRecord(name: string): Promise<Record> {\n\t\tlet p = new Promise<Record>(async (resolve) => {\n\t\t\tawait Promise.all(this.ready);\n\t\t\tlet res = await this.ala.execSelect(\n\t\t\t\t'select * from '\n\t\t\t\t+ this.tableName\n\t\t\t\t+ ' where name = \"' + name + '\"');\n\t\t\t// console.log('record retrieved in getRecord: ' + JSON.stringify(res));\n\t\t\tif (res.length === 0) {\n\t\t\t\tresolve(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// console.log(res[0]['name']);\n\t\t\t\tlet record = new Record(\n\t\t\t\t\tres[0]['name'],\n\t\t\t\t\tawait this.stringToDate(res[0]['lastSuccess']),\n\t\t\t\t\tawait this.stringToDate(res[0]['next']),\n\t\t\t\t\tawait this.stringToDate(res[0]['lastFail']));\n\t\t\t\t// console.log('getRecord record created: ' \n\t\t\t\t// + JSON.stringify(record));\n\t\t\t\tresolve(record);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\treturn p;\n\t}\n\n\tasync addRecord(record: Record) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait Promise.all(this.ready);\n\t\t\tlet sqlDelete = \"delete from \" + this.tableName\n\t\t\t\t+ \" where name = '\" + record.name + \"'\";\n\t\t\tlet deleteResult = await this.ala.exec(sqlDelete);\n\t\t\t// console.log(\"previous record deleted: \" + deleteResult);\n\t\t\tlet sqlInsert = \"insert into \" + this.tableName\n\t\t\t\t+ \" VALUES (\"\n\t\t\t\t+ \"'\" + record.name + \"', \"\n\t\t\t\t+ \"'\" + await this.dateToString(record.lastSuccess) + \"', \"\n\t\t\t\t+ \"'\" + await this.dateToString(record.next) + \"', \"\n\t\t\t\t+ \"'\" + await this.dateToString(record.lastFail) + \"'\"\n\t\t\t\t+ \")\";\n\t\t\tawait this.ala.exec(sqlInsert);\n\t\t\t// console.log(\"new record added\");\n\t\t\tthis.spreadsheet.writeTable(this.tableName);\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\n\t}\n\n\tasync dateToString(date: Date): Promise<string> {\n\t\tlet p = new Promise<string>((resolve) => {\n\t\t\tlet ret = \"\";\n\t\t\tlet year = date.getFullYear().toString();\n\t\t\tlet month = (date.getMonth() + 1).toString();\n\t\t\tif (month.length === 1)\n\t\t\t\tmonth = \"0\" + month;\n\t\t\tlet day = date.getDate().toString();\n\t\t\tif (day.length === 1)\n\t\t\t\tday = \"0\" + day;\n\t\t\tlet hour = date.getHours().toString();\n\t\t\tif (hour.length === 1)\n\t\t\t\thour = \"0\" + hour;\n\t\t\tlet minute = date.getMinutes().toString();\n\t\t\tif (minute.length === 1)\n\t\t\t\tminute = \"0\" + minute;\n\t\t\tresolve(year + \"-\" + month + \"-\" + day + \" \" + hour\n\t\t\t\t+ \":\" + minute);\n\t\t});\n\t\treturn p;\n\t}\n\n\tasync stringToDate(date: string): Promise<Date> {\n\t\tlet p = new Promise<Date>((resolve) => {\n\t\t\t// console.log(\"stringToDate: \" + date);\n\t\t\tlet pattern =\n\t\t\t\t/^(\\d{4})\\D+(\\d{1,2})\\D+(\\d{1,2})\\D+(\\d{1,2})\\D+(\\d{1,2})/;\n\t\t\tlet matches = pattern.exec(date);\n\t\t\tlet year = matches[1];\n\t\t\tif (year === undefined)\n\t\t\t\tthrow new Error(\"Couldn't find year in date string '\"\n\t\t\t\t\t+ date + \"'.\");\n\t\t\tlet month = matches[2];\n\t\t\tif (month === undefined)\n\t\t\t\tthrow new Error(\"Couldn't find month in date string '\"\n\t\t\t\t\t+ date + \"'.\");\n\t\t\tlet day = matches[3];\n\t\t\tif (day === undefined)\n\t\t\t\tthrow new Error(\"Couldn't find day in date string '\"\n\t\t\t\t\t+ date + \"'.\");\n\t\t\tlet hour = matches[4];\n\t\t\tif (hour === undefined)\n\t\t\t\tthrow new Error(\"Couldn't find hour in date string '\"\n\t\t\t\t\t+ date + \"'.\");\n\t\t\tlet minute = matches[5];\n\t\t\tif (minute === undefined)\n\t\t\t\tthrow new Error(\"Couldn't find minute in date string '\"\n\t\t\t\t\t+ date + \"'.\");\n\t\t\tresolve(new Date(parseInt(year),\n\t\t\t\tparseInt(month) - 1,\n\t\t\t\tparseInt(day),\n\t\t\t\tparseInt(hour),\n\t\t\t\tparseInt(minute)));\n\t\t});\n\t\treturn p;\n\t}\n\n\t// Store all records back into the spreadsheet\n\tasync save() {\n\t\tawait this.spreadsheet.writeTable(this.tableName);\n\t}\n\n}","import { Injectable } from '@angular/core';\nimport { GoogleAuthService } from './google-auth.service';\nimport { Spreadsheet } from './spreadsheet';\nimport { AlaSql } from './alasql.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SpreadsheetService {\n\tprivate spreadsheets = new Map<string, Spreadsheet>();\n\n\tconstructor(public gauth: GoogleAuthService,\n\t\tpublic ala: AlaSql) { }\n\n\tpublic async getSpreadsheet(name: string): Promise<Spreadsheet> {\n\t\tlet p = new Promise<Spreadsheet>(async (resolve) => {\n\t\t\tif (this.spreadsheets.get(name) === undefined) {\n\t\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\t\tconsole.log(\"Spreadsheet '\" + name + \"' not yet retrieved. Retrieving...\");\t\n\t\t\t\tlet q = \"name = '\" + name + \"' and mimeType contains 'google-apps.spreadsheet'\";\n\t\t\t\tlet list = gapi.client.drive.files.list(\n\t\t\t\t\t{ q: q }\n\t\t\t\t);\n\t\t\t\tlist.execute((resp) => {\n\t\t\t\t\tif (resp.files.length === 0) {\n\t\t\t\t\t\tthrow new Error(\"No Google Docs spreadsheet '\"\n\t\t\t\t\t\t\t+ name + \"' found.\");\n\t\t\t\t\t}\n\t\t\t\t\tlet s = new Spreadsheet(resp.files[0].id,\n\t\t\t\t\t\tthis.gauth, this.ala);\n\t\t\t\t\tthis.spreadsheets.set(name, s);\n\t\t\t\t\tresolve(s);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tresolve(this.spreadsheets.get(name));\n\t\t});\n\t\treturn p;\n\t}\n}","// Wrapper around a Google Docs spreadsheet\nimport { GoogleAuthService } from './google-auth.service';\nimport { AlaSql } from './alasql.service';\n\nexport class Spreadsheet {\n\n\tconstructor(\n\t\tpublic id: string,\n\t\tprivate gauth: GoogleAuthService,\n\t\tprivate ala: AlaSql) { }\n\n\tasync createSheetIfNotExists(name: string) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tlet sheets = await this.sheets;\n\t\t\tif (!sheets.includes(name)) {\n\t\t\t\tawait this.createSheet(name);\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse resolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\tasync sheetExists(name: string): Promise<boolean> {\n\t\tlet p = new Promise<boolean>(async (resolve) => {\n\t\t\tlet sheets = await this.sheets;\n\t\t\tif (sheets.includes(name)) {\n\t\t\t\tresolve(true);\n\t\t\t}\n\t\t\telse resolve(false);\n\t\t});\n\t\treturn p;\n\t}\n\n\tget sheets(): Promise<Array<string>> {\n\t\tlet p = new Promise<Array<string>>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet ret = new Array<string>();\n\t\t\tlet response =\n\t\t\t\tawait gapi.client.sheets.spreadsheets.get({\n\t\t\t\t\tspreadsheetId: this.id\n\t\t\t\t});\n\t\t\tfor (let i = 0; i < response.result.sheets.length; i++) {\n\t\t\t\tret.push(response.result.sheets[i].properties.title);\n\t\t\t}\n\t\t\tresolve(ret);\n\t\t});\n\t\treturn p;\n\t}\n\n\t// Usually called from createSheetIfNotExists\n\tpublic async createSheet(name: string) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet params = { spreadsheetId: this.id };\n\t\t\tlet requestBody = {\n\t\t\t\t\"requests\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"addSheet\": {\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"title\": name,\n\t\t\t\t\t\t\t\t\"gridProperties\": {\n\t\t\t\t\t\t\t\t\t\"rowCount\": 20,\n\t\t\t\t\t\t\t\t\t\"columnCount\": 12\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\tgapi.client.sheets.spreadsheets.batchUpdate(params, requestBody).then((response) => {\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow new Error('Error creating sheet ' + name\n\t\t\t\t\t\t+ '. reason: ' + JSON.stringify(error));\n\t\t\t\t});\n\t\t\t// \n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async writeRange(range: string, data: string[][]) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet params = {\n\t\t\t\tspreadsheetId: this.id,\n\t\t\t\trange: range,\n\t\t\t\tvalueInputOption: 'USER_ENTERED'\n\t\t\t};\n\t\t\tlet requestBody = {\n\t\t\t\t\"range\": range,\n\t\t\t\t\"values\": data\n\t\t\t};\n\t\t\t// console.log('spreadsheet id: ' + this.id);\n\t\t\tgapi.client.sheets.spreadsheets.values.update(params, requestBody).then((response) => {\n\t\t\t\t// console.log('writeRange response: ' + JSON.stringify(response));\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\t\t(reason) => {\n\t\t\t\t\tthrow new Error('Error writing range ' + name\n\t\t\t\t\t\t+ '. reason: ' + JSON.stringify(reason));\n\t\t\t\t});\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async setBold(range: string) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet gridRange = await this.a1ToGridRange(range);\n\t\t\t// console.log('gridRange: ' + JSON.stringify(gridRange));\n\t\t\tlet params = {\n\t\t\t\tspreadsheetId: this.id\n\t\t\t};\n\t\t\tlet requestBody = {\n\t\t\t\t\"requests\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"repeatCell\": {\n\t\t\t\t\t\t\t\"range\": gridRange,\n\t\t\t\t\t\t\t\"cell\": {\n\t\t\t\t\t\t\t\t\"userEnteredFormat\": {\n\t\t\t\t\t\t\t\t\t\"horizontalAlignment\": \"LEFT\",\n\t\t\t\t\t\t\t\t\t\"textFormat\": {\n\t\t\t\t\t\t\t\t\t\t\"bold\": true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": \"userEnteredFormat(textFormat,horizontalAlignment)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t};\n\t\t\tgapi.client.sheets.spreadsheets.batchUpdate(params, requestBody).then((response) => {\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\t\t(reason) => {\n\t\t\t\t\tthrow new Error('Error making range bold ' + name\n\t\t\t\t\t\t+ '. reason: ' + JSON.stringify(reason));\n\t\t\t\t});\n\t\t});\n\t\treturn p;\n\t}\n\n\t// A1 notation must include the sheet name\n\tpublic async a1ToGridRange(range: string) {\n\t\tlet p = new Promise<Object>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet parts = range.match(/(^.+)!(.+):(.+$)/);\n\t\t\tlet sheetName = parts[1];\n\t\t\tlet sheetId = await this.sheetId(sheetName);\n\t\t\tlet ret: any = {};\n\t\t\tret.sheetId = sheetId;\n\t\t\tlet from = parts[2].match(/(\\D+)(\\d+)/);\n\t\t\tlet to = parts[3].match(/(\\D+)(\\d+)/);\n\t\t\tif (from[2] !== undefined) {\n\t\t\t\tret.startRowIndex = (parseInt(from[2], 10) - 1);\n\t\t\t}\n\t\t\tif (to[2] !== undefined) {\n\t\t\t\tret.endRowIndex = (parseInt(to[2], 10));\n\t\t\t}\n\t\t\tif (from[1] !== undefined) {\n\t\t\t\tret.startColumnIndex = this.toColumnIndex(from[1]) - 1;\n\t\t\t}\n\t\t\tif (to[1] !== undefined) {\n\t\t\t\tret.endColumnIndex = this.toColumnIndex(to[1]);\n\t\t\t}\n\n\t\t\t// console.log(JSON.stringify(ret));\n\t\t\tresolve(ret);\n\t\t});\n\t\treturn p;\n\t}\n\n\tprivate toColumnIndex(letters: string): number {\n\t\tlet ret = 0;\n\t\tfor (let i = 0; i < letters.length; i++) {\n\t\t\tlet char = letters[i];\n\t\t\tret += char.toUpperCase().charCodeAt(0) - 64;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tsheetId(sheetName: string): Promise<number> {\n\t\tlet p = new Promise<number>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet response =\n\t\t\t\tawait gapi.client.sheets.spreadsheets.get({\n\t\t\t\t\tspreadsheetId: this.id\n\t\t\t\t});\n\t\t\tfor (let i = 0; i < response.result.sheets.length; i++) {\n\t\t\t\tif (response.result.sheets[i].properties.title ===\n\t\t\t\t\tsheetName) {\n\t\t\t\t\tresolve(response.result.sheets[i].properties.sheetId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve(-1);\n\t\t});\n\t\treturn p;\n\t}\n\n\t// Writes an alasql table to a sheet in the spreadsheet.\n\t// Uses the existing alasql data rather than a select query for efficiency.\n\tasync writeTable(tableName: string) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tlet values = await this.jsonToArray(this.ala.rawData(tableName));\n\t\t\tawait this.createSheetIfNotExists(tableName);\n\t\t\tawait this.clearSheet(tableName);\n\t\t\tawait this.writeRange(tableName, values);\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async jsonToArray(data: Object[]): Promise<string[][]> {\n\t\tlet p = new Promise<string[][]>((resolve) => {\n\t\t\tlet r = new Array<Array<string>>();\n\t\t\tif (data.length === 0) {\n\t\t\t\tresolve(r);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet r1 = new Array<string>();\n\t\t\t// column names\n\t\t\tfor (let key of Object.keys(data[0])) {\n\t\t\t\t// r1.push(key.replace('\"', '\\\"'));\n\t\t\t\tr1.push(key);\n\t\t\t}\n\t\t\tr.push(r1);\n\n\t\t\t// row data\n\t\t\tfor (let row of Object.values(data)) {\n\t\t\t\tlet r2 = new Array<string>();\n\t\t\t\tfor (let rowData of Object.values(row)) {\n\t\t\t\t\t// r2.push(rowData.replace('\"', '\\\"'));\n\t\t\t\t\tr2.push(rowData);\n\t\t\t\t}\n\t\t\t\tr.push(r2);\n\t\t\t}\n\t\t\t// This is how to get the array in the right format\n\t\t\t// for the Sheets API\n\t\t\t// console.log(JSON.stringify(r));\n\t\t\tresolve(r);\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async arrayToJson(data: string[][]): Promise<Object[]> {\n\t\tlet p = new Promise<Object[]>((resolve) => {\n\t\t\tif (data.length < 1) {\n\t\t\t\tthrow new Error('arrayToJson called without at least 1 line');\n\t\t\t}\n\t\t\tlet ret = new Array<Object>();\n\t\t\tif (data.length === 1) {\n\t\t\t\t// empty table - just column names\n\t\t\t\tlet obj = new Object();\n\t\t\t\tfor (let k = 0; k < data[0].length; k++) {\n\t\t\t\t\tlet key = data[0][k];\n\t\t\t\t\tobj[key] = '';\n\t\t\t\t}\n\t\t\t\tret.push(obj);\n\t\t\t}\n\t\t\telse { // not an empty table\n\t\t\t\tfor (let i = 1; i < data.length; i++) {\n\t\t\t\t\tlet obj = new Object();\n\t\t\t\t\tfor (let k = 0; k < data[0].length; k++) {\n\t\t\t\t\t\tlet key = data[0][k];\n\t\t\t\t\t\tobj[key] = data[i][k];\n\t\t\t\t\t}\n\t\t\t\t\tret.push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(JSON.stringify(ret));\n\t\t\tresolve(ret);\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async deleteSheet(name: string) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet sheetId = await this.sheetId(name);\n\t\t\tif (sheetId === -1) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet params = { spreadsheetId: this.id };\n\t\t\tlet requestBody = {\n\t\t\t\t\"requests\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"deleteSheet\": {\n\t\t\t\t\t\t\t\"sheetId\": sheetId\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\tgapi.client.sheets.spreadsheets.batchUpdate(params, requestBody).then((response) => {\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow new Error('Error deleting sheet ' + name\n\t\t\t\t\t\t+ '. reason: ' + JSON.stringify(error));\n\t\t\t\t});\n\t\t\t// \n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async clearSheet(name: string) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet sheetId = await this.sheetId(name);\n\t\t\tif (sheetId === -1) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet params = { spreadsheetId: this.id };\n\t\t\tlet requestBody = {\n\t\t\t\t\"requests\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"updateCells\": {\n\t\t\t\t\t\t\t\"range\": {\n\t\t\t\t\t\t\t\t\"sheetId\": sheetId\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": \"userEnteredValue\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\tgapi.client.sheets.spreadsheets.batchUpdate(params, requestBody).then((response) => {\n\t\t\t\tresolve();\n\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow new Error('Error deleting sheet ' + name\n\t\t\t\t\t\t+ '. reason: ' + JSON.stringify(error));\n\t\t\t\t});\n\t\t\t// \n\t\t});\n\t\treturn p;\n\t}\n\n\t// Reads an alasql table from a sheet in the spreadsheet.\n\tasync readTable(tableName: string) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tlet data = await this.readSheet(tableName);\n\t\t\tif (data.length > 0) {\n\t\t\t\tlet tableData = await this.arrayToJson(data);\n\t\t\t\t// console.log('readTable tableData: ' + JSON.stringify(tableData));\n\t\t\t\tawait this.ala.exec('drop table if exists ' + tableName);\n\t\t\t\tawait this.ala.createTable(tableName, tableData);\n\t\t\t\tlet qr = await this.ala.execSelect(\"select * from \" + tableName);\n\t\t\t\t// console.log(\"readTable results: \" + JSON.stringify(qr));\n\t\t\t}\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\tasync readSheet(sheetName: string) {\n\t\tlet p = new Promise<string[][]>(async (resolve) => {\n\t\t\tresolve(this.readRange(sheetName));\n\t\t});\n\t\treturn p;\n\t}\n\n\tasync readRange(rangeName) {\n\t\tlet p = new Promise<string[][]>(async (resolve) => {\n\t\t\tawait Promise.all(this.gauth.ready);\n\t\t\tlet ret = new Array<Array<string>>();\n\t\t\tlet params = {\n\t\t\t\tspreadsheetId: this.id,\n\t\t\t\trange: rangeName\n\t\t\t};\n\t\t\tgapi.client.sheets.spreadsheets.values.get(params).then((response) => {\n\t\t\t\tif (response.result.values !== undefined) {\n\t\t\t\t\tfor (let v of response.result.values) {\n\t\t\t\t\t\tret.push(v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log('return from readRange: ' + JSON.stringify(ret));\n\t\t\t\tresolve(ret);\n\t\t\t}, (error) => {\n\t\t\t\tthrow new Error('Error reading range ' + rangeName\n\t\t\t\t\t+ '. reason: ' + JSON.stringify(error));\n\t\t\t});\n\n\t\t});\n\t\treturn p;\n\t}\n}","// A record taken from the Google Docs spreadsheet\n// that records previous successful attempts and \n// when the next attempt is due.\n// It is used by the record service and by the trainer.\n\nexport enum OutputColour {\n\tred = \"#e20f0f\",\n\tgreen = \"#1daf07\",\n\tblue = \"#b7d7d9\"\n}\n\nexport class Record {\n\t// name: string; // name of the sequence\n\t// lastSuccess: Date; // date and time last completed successfully\n\t// next: Date; // due date for next practise\n\t// lastFail: Date; // date and time last completed with errors\n\n\tpublic incrementFactor = 1.5;\n\tprivate _lastSuccess: Date = new Date();\n\tprivate _next: Date = new Date();\n\tprivate _lastFail: Date = new Date();\n\t\n\tpublic lastSS: string;\n\tpublic nextS: string;\n\tpublic lastFS: string;\n\tpublic colour: OutputColour;\n\n\tconstructor(public name: string,\n\t\tlastSuccess: Date,\n\t\tnext: Date,\n\t\tlastFail) {\n\t\tthis.init(lastSuccess, next, lastFail).then(() => {\n\t\t\t// Initialised\n\t\t});\n\t}\n\n\tprivate async init(lastSuccess: Date, next: Date, lastFail: Date) {\n\t\tlet p = new Promise(async (resolve) => {\n\t\t\tawait this.setLastSuccess(lastSuccess);\n\t\t\tawait this.setNext(next);\n\t\t\tawait this.setLastFail(lastFail);\n\t\t\tawait this.setColour();\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic async setLastSuccess(value: Date) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tthis._lastSuccess = value;\n\t\t\tthis.lastSS = await this.dateToString(value);\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic get lastSuccess(): Date {\n\t\treturn this._lastSuccess;\n\t}\n\n\tpublic async setLastFail(value: Date) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tthis._lastFail = value;\n\t\t\tthis.lastFS = await this.dateToString(value);\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic get lastFail(): Date {\n\t\treturn this._lastFail;\n\t}\n\n\tpublic async setNext(value: Date) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tthis._next = value;\n\t\t\tthis.nextS = await this.dateToString(value);\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\tpublic get next(): Date {\n\t\treturn this._next;\n\t}\n\n\tprivate async setColour(): Promise<void> {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tlet now = new Date();\n\t\t\tif (this.next < now) {\n\t\t\t\tthis.colour = OutputColour.red;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.colour = OutputColour.green;\n\t\t\t}\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\t// Called when a mistake is made doing a sequence\n\tpublic async mistake() {\n\t\tthis.colour = OutputColour.red;\n\t\tthis.setNext(new Date());\n\t\tthis.setLastFail(new Date());\n\t}\n\n\tpublic success() {\n\t\tthis.colour = OutputColour.green;\n\t\tlet gap =\n\t\t\t(this.next.getTime() - this.lastSuccess.getTime()) * this.incrementFactor;\n\t\tlet oneDay = 1000 * 60 * 60 * 24;\n\t\tlet now = new Date();\n\t\tif (gap < oneDay \n\t\t\t|| (this.lastFail.getTime() > this.lastSuccess.getTime() ) )\n\t\t\tgap = oneDay;\n\t\tthis.setLastSuccess(new Date());\n\t\tthis.setNext(new Date(now.getTime() + gap));\n\t}\n\n\n\tprivate async dateToString(date: Date): Promise<string> {\n\t\tlet p = new Promise<string>(async (resolve) => {\n\t\t\tlet year = date.getFullYear().toString();\n\t\t\tlet month = (date.getMonth() + 1).toString();\n\t\t\tif (month.length === 1)\n\t\t\t\tmonth = \"0\" + month;\n\t\t\tlet day = date.getDate().toString();\n\t\t\tif (day.length === 1)\n\t\t\t\tday = \"0\" + day;\n\t\t\tlet hour = date.getHours().toString();\n\t\t\tif (hour.length === 1)\n\t\t\t\thour = \"0\" + hour;\n\t\t\tlet minute = date.getMinutes().toString();\n\t\t\tif (minute.length === 1)\n\t\t\t\tminute = \"0\" + minute;\n\t\t\tresolve(year + \"-\" + month + \"-\" + day + \" \" + hour\n\t\t\t\t+ \":\" + minute);\n\t\t});\n\t\treturn p;\n\t}\n\n\n}","import { Move } from '../chessboard/chess-enums';\n\nexport class Step {\n\t// move e.g. d2d4\n\t// comment on the move\n\tconstructor(public move: Move, public comment: string) { }\n}\n\nexport class Sequence {\n\tname: string; // name of the sequence\n\tfen: string; // initial fen position\n\tsteps: Array<Step> = new Array<Step>(); // array of steps in the sequence\n\n\tpublic addStep(move: string, comment: string) {\n\t\tconst m = new Move(move.substr(0, 2), move.substr(2, 2));\n\t\tconst s = new Step(m, comment);\n\t\tthis.steps.push(s);\n\n\t}\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TrainerComponent } from './trainer.component';\n\nconst routes: Routes = [\n  { path: 'trainer/:name', component: TrainerComponent },\n  { path: 'trainer', component: TrainerComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TrainerRoutingModule { }\n","module.exports = \".bullets {\\n    list-style-type: none;\\n    display: inline-block; \\n    font-weight: bold;\\n    padding-left: 5px;\\n    word-break: break-all;\\n}\\n\\n.floating-box {\\n    margin: 1px;\\n    display: inline-block; \\n    vertical-align: top;\\n}\\n\\n.trainerToolbar {\\n    color: black;\\n    display: inline-block;\\n    background-color: white;\\n  }\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJhaW5lci90cmFpbmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsc0JBQXNCO0NBQ3pCOztBQUVEO0lBQ0ksWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixvQkFBb0I7Q0FDdkI7O0FBRUQ7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHdCQUF3QjtHQUN6QiIsImZpbGUiOiJzcmMvYXBwL3RyYWluZXIvdHJhaW5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1bGxldHMge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbn1cblxuLmZsb2F0aW5nLWJveCB7XG4gICAgbWFyZ2luOiAxcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyBcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4udHJhaW5lclRvb2xiYXIge1xuICAgIGNvbG9yOiBibGFjaztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIH1cblxuIl19 */\"","module.exports = \"<nav>\\n    <button class=\\\"again-button\\\" mat-icon-button matTooltip=\\\"Again\\\" (click)=\\\"redoSequence()\\\">\\n        <mat-icon>redo\\n        </mat-icon>\\n    </button>\\n    <button mat-icon-button matTooltip=\\\"Previous\\\" (click)=\\\"prevSequence()\\\">\\n        <mat-icon>skip_previous\\n        </mat-icon>\\n    </button>\\n    <button mat-icon-button matTooltip=\\\"Next\\\" (click)=\\\"nextSequence()\\\">\\n        <mat-icon>skip_next\\n        </mat-icon>\\n    </button>\\n</nav>\\n\\n<app-chessboard class=\\\"floating-box\\\"></app-chessboard>\\n<section class=\\\"floating-box\\\" [style.max-width.px]=\\\"displayWidth\\\">\\n    <section class=\\\"floating-box\\\" *ngIf=\\\"record !== undefined\\\">\\n        <ul class=\\\"bullets\\\">\\n            <li [ngStyle]=\\\"{color: record.colour}\\\">{{ record.name }}</li>\\n            <li [ngStyle]=\\\"{color: record.colour}\\\">{{ \\\"Last completed with no mistakes: \\\" + record.lastSS }}</li>\\n            <li [ngStyle]=\\\"{color: record.colour}\\\">{{ \\\"Next attempt due: \\\" + record.nextS }}</li>\\n            <li [ngStyle]=\\\"{color: record.colour}\\\">{{ \\\"Last completed but with mistakes: \\\" + record.lastFS }}</li>\\n        </ul>\\n    </section>\\n    <section class=\\\"floating-box\\\">\\n        <ul class=\\\"bullets\\\" [ngStyle]=\\\"{color: outputColour}\\\">\\n            <li *ngFor=\\\"let line of output\\\">{{ line }}</li>\\n        </ul>\\n    </section>\\n</section>\"","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { GoogleAuthService } from '../services/google-auth.service';\nimport { ChessboardComponent } from '../chessboard/chessboard.component';\nimport { DataService } from '../services/data.service';\nimport { RecordService } from '../services/record.service';\nimport { Record, OutputColour } from '../shared-classes/record';\nimport { Sequence } from '../shared-classes/sequence';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Move } from '../chessboard/chess-enums';\n\nclass AsyncArray<T> {\n\tarray = new Array<T>();\n\tready: Promise<void>;\n\tresolve: (value?: void | PromiseLike<void>) => void;\n\tconstructor() {\n\t\tthis.ready = new Promise<void>((resolve) => {\n\t\t\tthis.resolve = resolve;\n\t\t});\n\t}\n}\n\n@Component({\n\tselector: 'app-trainer',\n\ttemplateUrl: './trainer.component.html',\n\tstyleUrls: ['./trainer.component.css']\n})\nexport class TrainerComponent implements OnInit {\n\n\tpublic output = new Array<string>();\n\tpublic outputColour = OutputColour.blue;\n\t@ViewChild(ChessboardComponent) board: ChessboardComponent;\n\tpublic displayWidth: number;\n\tpublic sequence: Sequence;\n\tprivate orderedSequences = new AsyncArray<Sequence>();\n\tpublic runningSubscription: Subscription;\n\tpublic record: Record;\n\n\tconstructor(private cd: ChangeDetectorRef,\n\t\tpublic gauth: GoogleAuthService,\n\t\tprivate dataService: DataService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate recordService: RecordService) { }\n\n\tasync ngOnInit() {\n\t\tthis.displayWidth = this.board.wholeSize;\n\t\t// If logged into Google, look for records of previous attempts\n\t\tPromise.all(this.gauth.ready).then(() => {\n\t\t\t// Google Drive is ready to use\n\t\t\tthis.generateOrderedSequences();\n\t\t});\n\t\tthis.output.push('Select a sequence from the Moves page.');\n\t\t// get the parameters, if any\n\t\tthis.route.paramMap.subscribe(async (params: ParamMap) => {\n\t\t\tlet name = params.get('name');\n\t\t\t// Leave this because it might be useful in future:\n\t\t\t// console.log('showHeader: ' + params.get('header'));\n\t\t\t// if (params.get('header') === 'showHeader') {\n\t\t\t// \tthis.showHeader = true;\n\t\t\t// } else if (params.get('header') === 'hideHeader') {\n\t\t\t// \tthis.showHeader = false;\n\t\t\t// }\n\t\t\tif (name === undefined || name === null) {\n\t\t\t\tawait this.nextSequence();\n\t\t\t\tthis.runSequence();\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.output.length = 0;\n\t\t\t\tthis.output.push('Retrieving data...');\n\t\t\t\t// Check the sequence is in the sequences data\n\t\t\t\tthis.sequence = await this.dataService.findSequence(name);\n\t\t\t\tif (this.sequence === undefined) {\n\t\t\t\t\tthis.output.push('The sequence \\'' + name + '\\' cant be found.');\n\t\t\t\t} else {\n\t\t\t\t\tthis.runSequence();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t} // end of ngOnInit\n\n\trunSequence() {\n\t\tif (this.sequence === undefined) {\n\t\t\tthrow new Error('runSequence called without a valid sequence.');\n\t\t}\n\t\tthis.board.load(this.sequence.fen);\n\t\tthis.board.flipBoardTo(this.board.chess.turn);\n\t\tlet successful = true;\n\t\tthis.output.length = 0;\n\t\t// this.output.push(this.sequence.name);\n\t\tthis.getRecord();\n\t\tlet stepCount = 0;\n\n\t\tthis.runningSubscription = <Subscription>this.board.moveMade.subscribe((move: Move) => {\n\t\t\t// console.log(\"move made: \" + move.from + move.to);\n\t\t\tif (stepCount < this.sequence.steps.length) {\n\t\t\t\tlet step = this.sequence.steps[stepCount];\n\t\t\t\t// console.log(\"step: \" + step.move);\n\t\t\t\tif ((move.from + move.to) === step.move.from + step.move.to) {\n\t\t\t\t\t// Correct move\n\t\t\t\t\tthis.board.chess.move(step.move);\n\t\t\t\t\t// Make the next move if there is one\n\t\t\t\t\tstepCount++;\n\t\t\t\t\tif (stepCount < this.sequence.steps.length) {\n\t\t\t\t\t\tstep = this.sequence.steps[stepCount];\n\t\t\t\t\t\tthis.board.chess.move(step.move);\n\t\t\t\t\t\tconsole.log('fen after move: ' + this.board.chess.fen);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.endSequence(successful);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.board.chess.undo();\n\t\t\t\t\tthis.output.push('Incorrect move. Should be '\n\t\t\t\t\t\t+ step.move.from + step.move.to);\n\t\t\t\t\tstepCount--;\n\t\t\t\t\tsuccessful = false;\n\t\t\t\t\tif (this.record !== undefined) {\n\t\t\t\t\t\tthis.record.mistake();\n\t\t\t\t\t\tthis.recordService.addRecord(this.record);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstepCount++;\n\t\t\t\tif (stepCount === this.sequence.steps.length) {\n\t\t\t\t\tthis.endSequence(successful);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync endSequence(successful: boolean) {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tthis.output.push('End of sequence.');\n\t\t\tthis.runningSubscription.unsubscribe();\n\t\t\t// let record = await this.recordService.getRecord(this.sequence.name);\n\t\t\tif (this.record === undefined) {\n\t\t\t\tlet now = new Date();\n\t\t\t\tlet next = new Date();\n\t\t\t\tif (successful) {\n\t\t\t\t\tnext.setDate(next.getDate() + 1);\n\t\t\t\t}\n\t\t\t\tconsole.log(\"New record. name: \" + this.sequence.name\n\t\t\t\t\t+ \", last: \" + now\n\t\t\t\t\t+ \", next: \" + next);\n\t\t\t\tthis.record = new Record(this.sequence.name, now, next, now);\n\t\t\t\tawait this.recordService.addRecord(this.record);\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (successful) {\n\t\t\t\t\tthis.record.success();\n\t\t\t\t\tawait this.recordService.addRecord(this.record);\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tredoSequence() {\n\t\t// console.log('redo sequence');\n\t\tif (this.runningSubscription !== undefined\n\t\t\t&& !this.runningSubscription.closed) {\n\t\t\tthis.runningSubscription.unsubscribe();\n\t\t}\n\t\tthis.runSequence();\n\t}\n\n\tasync nextSequence() {\n\t\tif (this.runningSubscription !== undefined\n\t\t\t&& !this.runningSubscription.closed) {\n\t\t\tthis.runningSubscription.unsubscribe();\n\t\t}\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait this.orderedSequences.ready;\n\t\t\tif (this.sequence === undefined) {\n\t\t\t\tif (this.orderedSequences.array.length > 0) {\n\t\t\t\t\tthis.sequence = this.orderedSequences.array[0];\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.orderedSequences.array.length; i++) {\n\t\t\t\tlet seq = this.orderedSequences.array[i];\n\t\t\t\tif (seq.name === this.sequence.name) {\n\t\t\t\t\t// for (let s of this.orderedSequences.array) {\n\t\t\t\t\t// \tconsole.log(\"nextSequence \" + s.name);\n\t\t\t\t\t// }\n\t\t\t\t\tif ((i + 1) < this.orderedSequences.array.length) {\n\t\t\t\t\t\tthis.sequence\n\t\t\t\t\t\t\t= this.orderedSequences.array[i + 1];\n\t\t\t\t\t\tthis.runSequence();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tconsole.log(\"Already at last sequence.\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn p;\n\t}\n\n\tasync prevSequence() {\n\t\tif (this.runningSubscription !== undefined\n\t\t\t&& !this.runningSubscription.closed) {\n\t\t\tthis.runningSubscription.unsubscribe();\n\t\t}\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\t// await Promise.all(this.orderedSequencesReady);\n\t\t\tawait this.orderedSequences.ready;\n\t\t\tif (this.sequence === undefined) {\n\t\t\t\tif (this.orderedSequences.array.length > 0) {\n\t\t\t\t\tthis.sequence = this.orderedSequences.array[0];\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.orderedSequences.array.length; i++) {\n\t\t\t\tlet seq = this.orderedSequences.array[i];\n\t\t\t\tif (seq.name === this.sequence.name) {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tthis.sequence\n\t\t\t\t\t\t\t= this.orderedSequences.array[i - 1];\n\t\t\t\t\t\tthis.runSequence();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tconsole.log(\"Already at first sequence.\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\t// Where there are some records on previous sequences, use them,\n\t// otherwise any order\n\tasync generateOrderedSequences() {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\t// this.orderedSequences = new Array<Sequence>();\n\t\t\tawait Promise.all(this.recordService.ready);\n\t\t\tlet sql = \"select * from t_records order by next\";\n\t\t\tlet results = await this.recordService.ala.execSelect(sql);\n\t\t\tif (results.length === 0) {\n\t\t\t\tthis.output.push('No records found.');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let result of results) {\n\t\t\t\t\tlet name = result['name'];\n\t\t\t\t\tlet seq = await this.dataService.findSequence(name);\n\t\t\t\t\tif (seq === undefined) {\n\t\t\t\t\t\tthis.output.push('The sequence \\'' + name + '\\' cant be found.');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.orderedSequences.array.push(seq);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Pull in any other sequences\n\t\t\tfor (let seqA of this.dataService.sequencies) {\n\t\t\t\tlet contains = false;\n\t\t\t\tfor (let seqB of this.orderedSequences.array) {\n\t\t\t\t\tif (seqA.name === seqB.name)\n\t\t\t\t\t\tcontains = true;\n\t\t\t\t}\n\t\t\t\tif (!contains) {\n\t\t\t\t\tthis.orderedSequences.array.push(seqA);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.orderedSequences.resolve();\n\t\t});\n\t}\n\n\tprivate async getRecord() {\n\t\tlet p = new Promise<void>(async (resolve) => {\n\t\t\tawait Promise.all(this.recordService.ready);\n\t\t\tthis.record = await this.recordService.getRecord(this.sequence.name);\n\t\t\tresolve();\n\t\t});\n\t\treturn p;\n\t}\n\n\n\n} // End of class TrainerComponent\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}